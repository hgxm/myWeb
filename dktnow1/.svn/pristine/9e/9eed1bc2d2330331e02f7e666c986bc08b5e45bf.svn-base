//
//  StuentDoHomeWork.m
//  ClassRoomTeacher
//
//  Created by apple  on 13-7-8.
//  Copyright (c) 2013年 apple . All rights reserved.
//

#import "StuentDoHomeWork.h"

@interface StuentDoHomeWork ()

@end

@implementation StuentDoHomeWork
@synthesize actDict,courseDict;
@synthesize apId;
@synthesize isShowRightAnswer;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        
        
      
        
    }
    return self;
}

-(void)removeTheStudentDb{
    
    //批改完成作业后，删除所有的题目数据库
    
    for (int i = 0; i<[muArrContent count]; i++) {
        NSMutableDictionary *muDict = [muArrContent objectAtIndex:i];
        
        NSFileManager *manager = [NSFileManager defaultManager];
        
        if ([[muDict objectForKey:@"to_type"] intValue] == 5) {
            
            NSString *dbName =[NSString stringWithFormat:@"answers%@.db",[muDict objectForKey:@"to_id"]];
            NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
            NSString *documentDirectory = [paths objectAtIndex:0];
            NSString *dbPath = [documentDirectory stringByAppendingPathComponent:dbName];
            
            if ([manager fileExistsAtPath:dbPath]) {
                [manager removeItemAtPath:dbPath error:nil];
            }
        }
    }
    
   
    
}
-(void)btnBackAction{
    
    [super btnBackAction];
    [self removeTheStudentDb];
}
-(void)btnTongjiAction:(UIButton *)btn{
    
    [self.view bringSubviewToFront:tongjiView];
    tongjiView.hidden = NO;
    [zhuxing clearScrollView];
    
    
    if (requestOther) {
        [requestOther cancel];
        requestOther.delegate=nil;
        [requestOther release];
        requestOther = nil;
    }
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    requestOther=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestOther setDelegate:self];
    
    
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    [postDict setObject:[actDict objectForKey:@"act_id"] forKey:@"args[act_id]"];
    [postDict setObject:@"JSON" forKey:@"format"];
    if ([[actDict objectForKey:@"act_type"] intValue] == 1) {
        [postDict setObject:@"Homework.stats" forKey:@"method"];
    }else{
        [postDict setObject:@"Classwork.stats" forKey:@"method"];
    }
    
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
        
        [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
        
    }else{
        [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
        
    }
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestOther setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestOther buildPostBody];
    [requestOther setTimeOutSeconds:30];
    [requestOther startAsynchronous];
    [requestOther setDidFinishSelector:@selector(mySuccessTongji:)];
    [requestOther setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
   
    
}
-(void)mySuccessTongji:(id)sender{
    
    NSString *str = [sender responseString];
    NSMutableDictionary *mudict = [str JSONValue];
    
    NSLog(@"统计结果 %@",mudict);
    if (mudict) {
        if ([mudict isKindOfClass:[NSArray class]]) {
            
            return;
        }else if([mudict isKindOfClass:[NSDictionary class]]){
            
            if (![mudict objectForKey:@"errCode"]) {
                
                for (int i= 0; i<[muArrContent count]; i++) {
                    NSMutableDictionary *dict111 = [muArrContent objectAtIndex:i];
                    NSMutableDictionary *dict222 =[mudict objectForKey:[dict111 objectForKey:@"to_id"]];
                    [dict222 setObject:[NSString stringWithFormat:@"%d",i+1] forKey:@"num"];
                }
                [zhuxing changUI:studentTotal data:mudict];
            }
        }
    }
    
    
    
}
#pragma mark
#pragma mark readOver
-(void)clickSure:(int)score mark:(NSString *)strMark statue:(int)finish{
    
    
    NSLog(@"fsdf %@",selectStuDict);
    NSLog(@"sdfsdf %@",daanDict);
    NSLog(@"test %@",[keguantiDict JSONFragment]);
    /*
     
     "a_avatar" = "http://192.168.7.53:81/AuthAvatar/48/default.jpg";
     "a_id" = 59;
     "a_nickname" = "\U674e\U5072\U94b0";
     "a_sex" = 1;
     "a_type" = 1;
     "h_id" = 202;
     "hd_id" = 56;
     "hd_status" = 1;
     */
    if (requestOther) {
        [requestOther cancel];
        requestOther.delegate=nil;
        [requestOther release];
        requestOther = nil;
    }
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    requestOther=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestOther setDelegate:self];
    
    
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    
    [postDict setObject:[selectStuDict objectForKey:@"a_id"] forKey:@"args[stu_id]"];
    [postDict setObject:[selectStuDict objectForKey:@"hd_id"] forKey:@"args[hd_id]"];
    [postDict setObject:[NSString stringWithFormat:@"%d",finish] forKey:@"args[hd_status]"];
    [postDict setObject:[ToolClass encodeURL:strMark] forKey:@"args[hd_remark]"];
    [postDict setObject:@"" forKey:@"args[hd_persent]"];
    [postDict setObject:[NSString stringWithFormat:@"%d",score] forKey:@"args[hd_score]"];
    [postDict setObject:@"" forKey:@"args[hd_stat]"];
    [postDict setObject:@"" forKey:@"args[hd_shortanswer]"];
    
    
    [postDict setObject:@"JSON" forKey:@"format"];
    if ([[actDict objectForKey:@"act_type"] intValue] == 1) {
        [postDict setObject:@"Homework.setStatus" forKey:@"method"];
    }else{
        [postDict setObject:@"Classwork.setStatus" forKey:@"method"];
    }
    
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestOther setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestOther buildPostBody];
    [requestOther setTimeOutSeconds:30];
    [requestOther startAsynchronous];
    [requestOther setDidFinishSelector:@selector(mySuccessPiyue:)];
    [requestOther setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
}
-(void)mySuccessPiyue:(id)sender{
    
    NSString *str = [sender responseString];
    NSDictionary *dict = [str JSONValue];
    if ([[dict objectForKey:@"status"] intValue]==1) {
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"提交成功！" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
        
        [readView removeFromSuperview];
        
        if (selectStudent-1000<[muWorkStuentList count]-1) {

            UIButton *tempBtn = (UIButton *)[studentScroll viewWithTag:selectStudent+1];
            [self btnAction:tempBtn];
            
            

        }
    }else{
        
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"提交失败！" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    NSLog(@"strData is %@",str);

}
-(void)btnSubmit:(UIButton *)btn{
    
    BOOL flag = NO;
    if (selectStuDict) {
        if ([[selectStuDict objectForKey:@"hd_status"] intValue]!=0) {
            flag = YES;
        }
    }
    if (flag ==YES) {
        readView = [[ReadOverView alloc]initWithFrame:CGRectMake(0, 0, 1024, 748)];
        readView.delegate = self;
        [self.view addSubview:readView];
        [readView release];
    }else
    {
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"该学生没有提交作业!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    
    
    /*
    if (doHomeView) {
        [doHomeView saveCurrentToDatabase];
    }
    
    if (requestDetail) {
        [requestDetail cancel];
        requestDetail.delegate = nil;
        [requestDetail release];
        requestDetail  = nil;
    }
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    requestDetail=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestDetail setDelegate:self];
    
    
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    
    if (apId == 0) {
        if ([[actDict objectForKey:@"act_type"] intValue] == 1) {
            
            [postDict setObject:[actDict objectForKey:@"ap_id"] forKey:@"args[h_id]"];
            [postDict setObject:[ToolClass encodeURL:[daanDict JSONFragment]] forKey:@"args[hd_answer]"];
            [postDict setObject:@"" forKey:@"args[hd_persent]"];
            [postDict setObject:@"" forKey:@"args[hd_use_time]"];
            [postDict setObject:@"Homework.insert" forKey:@"method"];
        }else{
            [postDict setObject:[actDict objectForKey:@"ap_id"] forKey:@"args[cw_id]"];
            [postDict setObject:[ToolClass encodeURL:[daanDict JSONFragment]] forKey:@"args[cd_answer]"];
            [postDict setObject:@"" forKey:@"args[cd_persent]"];
            [postDict setObject:@"" forKey:@"args[cd_use_time]"];
            [postDict setObject:@"Classwork.insert" forKey:@"method"];
        }
    }else{
        [postDict setObject:[NSString stringWithFormat:@"%d",apId] forKey:@"args[cw_id]"];
        [postDict setObject:[ToolClass encodeURL:[daanDict JSONFragment]] forKey:@"args[cd_answer]"];
        [postDict setObject:@"" forKey:@"args[cd_persent]"];
        [postDict setObject:@"" forKey:@"args[cd_use_time]"];
        [postDict setObject:@"Classwork.insert" forKey:@"method"];
    }
   
    
    [postDict setObject:@"JSON" forKey:@"format"];
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    
    NSString *strSign=[ToolClass getSign:postDict];
    
    
    NSLog(@"strSign is %@",strSign);
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestDetail setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    
    for (int i = 0; i<[muArrContent count]; i++) {
        NSMutableDictionary *muDict = [muArrContent objectAtIndex:i];
        if ([[muDict objectForKey:@"to_type"] intValue] == 5) {
            
            NSString *dbName =[NSString stringWithFormat:@"answers%@.db",[muDict objectForKey:@"to_id"]];
            NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
            NSString *documentDirectory = [paths objectAtIndex:0];
            NSString *dbPath = [documentDirectory stringByAppendingPathComponent:dbName];
            FMDatabase *db = [FMDatabase databaseWithPath:dbPath];
            if (![db open]) {
                //NSLog(@"Could not open db.");
            }
            [db executeUpdate:@"CREATE TABLE IF NOT EXISTS handwriting(ha_id text PRIMARY KEY,ha_title text,ha_bitmap blob,ba_bitmap blob,sa_bitmap blob)"];
            FMResultSet *rs = [db executeQuery:@"SELECT * FROM handwriting"];
            while ([rs next]) {
                
                NSData *imageData = [rs dataForColumn:@"sa_bitmap"];
                NSString *strTitle = [rs stringForColumn:@"ha_title"];
                [requestDetail addData:imageData withFileName:strTitle andContentType:@"image/png" forKey:@"picture_answer[]"];
            }
        }
    }
    
    
    [requestDetail buildPostBody];
    [requestDetail setTimeOutSeconds:30];
    [requestDetail startAsynchronous];
    [requestDetail setDidFinishSelector:@selector(mySuccessSubmit:)];
    [requestDetail setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
    
    NSLog(@"答案 %@",[daanDict JSONFragment]);
    */
    
}
-(void)mySuccessSubmit:(id)sender{
    
    NSString *str = [sender responseString];
    NSMutableDictionary *muDict = [str JSONValue];
    
    if (muDict) {
        if ([[muDict objectForKey:@"status"] intValue] ==0) {
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:[muDict objectForKey:@"message"] delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
            [alert release];
        }else{
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"提交成功!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
            [alert release];
            
            
        }
        
            [self.navigationController popViewControllerAnimated:YES];
       
    }
    
    
    
    NSLog(@"muDict is %@",str);
}
-(void)clickTakePicture{
    
    self.view.frame = CGRectMake(0, 0, 1024, 748);
   
    UIImagePickerController *picker = [[UIImagePickerController alloc] init];
    if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
        
        
        picker.sourceType = UIImagePickerControllerSourceTypeCamera;
        
//        NSArray *temp_MediaTypes = [UIImagePickerController availableMediaTypesForSourceType:picker.sourceType];
//        picker.mediaTypes = temp_MediaTypes;
        
        [picker setAllowsEditing:YES];
        picker.delegate = self;
        [self presentModalViewController:picker animated:YES];
        [picker release];
        
        
        
    }else{
        
       
        
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"您的设备不支持拍照!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    


}
//下面两个函数是遵守UIImagePickerControllerDelegate这个协议所实现的类.这样就能够完整的实现,获取照片或者视频,然后写入文件的过程.
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    
    NSString *mediaType = [info objectForKey:UIImagePickerControllerMediaType];
   
    if ([mediaType isEqualToString:@"public.image"]){
        //拿到编辑后的图片。
		UIImage *image = [info objectForKey:@"UIImagePickerControllerEditedImage"];
        [doHomeView setBackImage:image];
    }
        
    [picker dismissModalViewControllerAnimated:YES];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    
    [picker dismissModalViewControllerAnimated:YES];
    
}
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    keguantiDict = [[NSMutableDictionary alloc]init];
    
    infoLabel.hidden = YES;
    nameLabel.hidden = YES;
    headBackImage.hidden = YES;
    
    dele = [[UIApplication sharedApplication] delegate];
    
    infoLabel.hidden = NO;
    infoLabel.textAlignment = NSTextAlignmentCenter;
    infoLabel.text = [actDict objectForKey:@"act_title"];
    
    

    
    if (apId != 0) {
        
        btnBack.enabled = NO;
        infoLabel.text = @"课堂练习";
        
    }else{
        
    }
    UIButton *btnTongji= [[UIButton alloc] initWithFrame:CGRectMake(790, 10, 101, 38)];
    btnTongji.backgroundColor = [UIColor clearColor];
    [btnTongji setImage:[UIImage imageNamed:@"统计图.png"] forState:UIControlStateNormal];
    [btnTongji addTarget:self action:@selector(btnTongjiAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:btnTongji];
    [btnTongji release] ;
        
    UIButton *btnSubmit = [[UIButton alloc] initWithFrame:CGRectMake(900, 10, 101, 38)];
    btnSubmit.backgroundColor = [UIColor clearColor];
    [btnSubmit setImage:[UIImage imageNamed:@"写评语.png"] forState:UIControlStateNormal];
    [btnSubmit addTarget:self action:@selector(btnSubmit:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:btnSubmit];
    [btnSubmit release] ;
    
    mainScrollview = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 54, 507, 407)];
    mainScrollview.backgroundColor = [UIColor clearColor];
    [mainScrollview setShowsVerticalScrollIndicator:NO];
    [mainScrollview setShowsHorizontalScrollIndicator:NO];
    [self.view addSubview:mainScrollview];
    [mainScrollview release];
    
    
    tikuScro = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 475, 507, 277)];
    [tikuScro setShowsHorizontalScrollIndicator:NO];
    [self.view addSubview:tikuScro];
    [tikuScro release];
    
    
    lblTitle = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 507, 30)];
    lblTitle.backgroundColor = [UIColor clearColor];
    lblTitle.textColor = MYCOLOR;
    lblTitle.textAlignment = NSTextAlignmentLeft;
    [mainScrollview addSubview:lblTitle];
    [lblTitle release];
    
    topicImage = [[UIImageView alloc] initWithFrame:CGRectMake(0, 30, 507, 407-30)];
    [mainScrollview addSubview:topicImage];
    [topicImage release];
    
    
    UIImageView *hline = [[UIImageView alloc]initWithFrame:CGRectMake(0, 465, 510, 2)];
    hline.image = [UIImage imageNamed:@"homework横线.png"];
    [self.view addSubview:hline];
    [hline release];
    
    UIImageView *vline = [[UIImageView alloc]initWithFrame:CGRectMake(510, 54, 2, 695)];
    vline.image = [UIImage imageNamed:@"homework竖线.png"];
    [self.view addSubview:vline];
    [vline release];
    
    
    
    
    UISwipeGestureRecognizer *swipeLeft=[[UISwipeGestureRecognizer alloc]initWithTarget:self action:@selector(moveLeft)];
    swipeLeft.direction = UISwipeGestureRecognizerDirectionLeft;
    [tikuScro addGestureRecognizer:swipeLeft];
    [swipeLeft release];
    
    UISwipeGestureRecognizer *swipeRight=[[UISwipeGestureRecognizer alloc]initWithTarget:self action:@selector(moveRight)];
    swipeRight.direction = UISwipeGestureRecognizerDirectionRight;
    [tikuScro addGestureRecognizer:swipeRight];
    [swipeRight release];
    
    studentView = [[UIView alloc]initWithFrame:CGRectMake(43-510, 48, 510, 420)];
    [self.view addSubview:studentView];
    [studentView release];
    
    UIImageView *backStuView = [[UIImageView alloc]initWithFrame:CGRectMake(0,0, 510, 420)];
    backStuView.image = [UIImage imageNamed:@"homework拉出学生名单.png"];
    backStuView.userInteractionEnabled = YES;
    [studentView addSubview:backStuView];
    [backStuView release];
      
    UIImageView *pullImage = [[UIImageView alloc]initWithFrame:CGRectMake(510-43, 160, 43, 99)];
    pullImage.userInteractionEnabled = YES;
    pullImage.image = [UIImage imageNamed:@"homework拉出按钮.png"];
    [studentView addSubview:pullImage];
    [pullImage release];
    
    
    UIPanGestureRecognizer *panGesture = [[UIPanGestureRecognizer alloc]initWithTarget:self action:@selector(panGestureAction:)];
    [pullImage addGestureRecognizer:panGesture];
    [panGesture release];
    
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tapGesture:)];
    tapGesture.numberOfTapsRequired = 1;
    [pullImage addGestureRecognizer:tapGesture];
    [tapGesture release];
    
    
    studentScroll = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 10, 510-43, 400)];
    studentScroll.backgroundColor = [UIColor clearColor];
    [studentScroll setShowsVerticalScrollIndicator:NO];
    [studentView addSubview:studentScroll];
    [studentScroll release];
    
    
    notTouch = [[UIView alloc] initWithFrame:CGRectMake(512,54,512,690)];
    notTouch.backgroundColor = [UIColor clearColor];
    [self.view addSubview:notTouch];
    [notTouch release];
    
    NSLog(@"actdict is %@",actDict);

    
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    requestDetail=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestDetail setDelegate:self];
    
    
   

    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    [postDict setObject:[actDict objectForKey:@"act_id"] forKey:@"args[act_id]"];
    [postDict setObject:@"JSON" forKey:@"format"];
    [postDict setObject:@"Activity.detail" forKey:@"method"];
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
        
        [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
        
    }else{
        [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
        
    }
    
    
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    
    NSString *strSign=[ToolClass getSign:postDict];
    
    NSLog(@"strSign is %@",strSign);
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestDetail setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestDetail buildPostBody];
    [requestDetail setTimeOutSeconds:30];
    [requestDetail startAsynchronous];
    [requestDetail setDidFinishSelector:@selector(mySuccessDetailWork:)];
    [requestDetail setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
    
    {
        if (requestOther) {
            [requestOther cancel];
            requestOther.delegate=nil;
            [requestOther release];
            requestOther = nil;
        }
        NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
        NSString *timeString =[ToolClass getCurretDate];
        requestOther=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
        [requestOther setDelegate:self];
        
        
        NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
        [postDict setObject:timeString forKey:@"ts"];
        [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
        [postDict setObject:[actDict objectForKey:@"ap_id"] forKey:@"args[ap_id]"];
        [postDict setObject:@"JSON" forKey:@"format"];
        if ([[actDict objectForKey:@"act_type"] intValue] == 1) {
            [postDict setObject:@"Homework.listsAuth" forKey:@"method"];
        }else{
            [postDict setObject:@"Classwork.listsAuth" forKey:@"method"];
        }
        
        [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
        if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
            
            [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
            
        }else{
            [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
            
        }
        NSString *strSign=[ToolClass getSign:postDict];
        [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
        
        
        NSLog(@"postdict is %@",postDict);
        
        for(int i=0;i<[[postDict allKeys] count];i++){
            
            [requestOther setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
        }
        [requestOther buildPostBody];
        [requestOther setTimeOutSeconds:30];
        [requestOther startAsynchronous];
        [requestOther setDidFinishSelector:@selector(mySuccessStuList:)];
        [requestOther setDidFailSelector:@selector(myError:)];
        
        
        [postDict release];
        [strSign release];
        
    }
    
    tongjiView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 1024, 748)];
    tongjiView.backgroundColor = [UIColor clearColor];
    tongjiView.hidden = YES;
    [self.view addSubview:tongjiView];
    [tongjiView release];
    
    UIView *blackView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 1024, 748)];
    blackView.backgroundColor = [UIColor blackColor];
    blackView.alpha = 0.5;
    [tongjiView addSubview:blackView];
    [blackView release];
    
    UITapGestureRecognizer *tapBlackView = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tapBlackViewAction:)];
    [blackView addGestureRecognizer:tapBlackView];
    [tapBlackView release];
    
    
    zhuxing = [[ZhuxingView alloc] initWithFrame:CGRectMake(200,100, 630, 400)];
    zhuxing.backgroundColor = [UIColor whiteColor];
    [tongjiView addSubview:zhuxing];
    [zhuxing release];
    
    zhuxing.layer.borderColor = MYCOLOR.CGColor;
    zhuxing.layer.borderWidth = 1.0;
    zhuxing.layer.cornerRadius = 5.0;
    
    
    
    
    
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
	// Do any additional setup after loading the view.
}
-(void)tapBlackViewAction:(UITapGestureRecognizer *)tapGesture{
    
    tongjiView.hidden = YES;
}
-(void)tapGesture:(UITapGestureRecognizer *)tapGesture{
    
    UIView *view = [[tapGesture view] superview];
    CGRect rect = view.frame;
    if (rect.origin.x == 0) {
        rect.origin.x = 43-510;
    }else if(rect.origin.x == 43-510){
    
        rect.origin.x = 0;
    }
   
    [UIView animateWithDuration:0.2 animations:^(void){
    
        view.frame = rect;
    
    }];
}
-(void)panGestureAction:(UIPanGestureRecognizer *)panGesture{
    
    UIView *view = [[panGesture view] superview];
    if ([panGesture state] == UIGestureRecognizerStateBegan || [panGesture state] == UIGestureRecognizerStateChanged){
        
        CGPoint transpoint = [panGesture translationInView:[view superview]];
        view.center = CGPointMake(view.center.x+transpoint.x, view.center.y+transpoint.y);
        
        
        CGRect rect=view.frame;
        
        rect.origin.y= 48;
        
        if (rect.origin.x>=0) {
            rect.origin.x=0;
        }
        if (rect.origin.x<=-(510-43)) {
            rect.origin.x = -(510-43);
        }
       
        
        view.frame=rect;
        
        
        [panGesture setTranslation:CGPointZero inView:[view superview]];
        
    }else if([panGesture state] == UIGestureRecognizerStateEnded){
        
        CGRect rect=view.frame;
        
        rect.origin.y= 48;
        rect.origin.x = (rect.origin.x+(510-43))>(0-rect.origin.x) ? 0 : -(510-43);
        
        [UIView animateWithDuration:0.2 animations:^(void){
        
            view.frame=rect;

        }];
    }
}
-(void)mySuccessStuList:(id)sender{
    
    NSString *str = [sender responseString];
    NSMutableArray *muArr = [str JSONValue];
    if ([muArr isKindOfClass:[NSDictionary class]]) {
        
    }else{
        [muWorkStuentList removeAllObjects];
        [muWorkStuentList release];
        muWorkStuentList = nil;
        
        muWorkStuentList = [muArr mutableCopy];
        studentTotal = [muWorkStuentList count];
        [self loadStuScroll:muWorkStuentList];
    }
    NSLog(@"muArr222 is  %@",muArr);
    
}
-(void)loadStuScroll:(NSMutableArray *)muarr{
    
    for (int i = 0; i<[muarr count]; i++) {
        NSMutableDictionary *tempDict = [muarr objectAtIndex:i];
        
        UIButton *btn = [[UIButton alloc] initWithFrame:CGRectMake(i%3*(146+5), i/3*(62+5), 146, 62)];
        btn.tag = i+1000;
        [btn addTarget:self action:@selector(btnAction:) forControlEvents:UIControlEventTouchDown];
        [btn setImage:[UIImage imageNamed:@"homework学生底.png"] forState:UIControlStateNormal];
        [btn setImage:[UIImage imageNamed:@"homework学生底.png"] forState:UIControlStateHighlighted];

        [studentScroll addSubview:btn];
        [btn release];
        
        ImgDownSelf *image = [[ImgDownSelf alloc]initWithFrame:CGRectMake(10, 7, 48, 48)];
        [image setImgUrl:[tempDict objectForKey:@"a_avatar"]];
        image.userInteractionEnabled = NO;
        [btn addSubview:image];
        [image release];
        
        UILabel *lblName = [[UILabel alloc]initWithFrame:CGRectMake(60, 0, 80, 62)];
        lblName.backgroundColor = [UIColor clearColor];
        lblName.text = [tempDict objectForKey:@"a_nickname"];
        [btn addSubview:lblName];
        [lblName release];
        
        if ([[tempDict objectForKey:@"hd_status"] intValue] != 0) {
            
            lblName.textColor = MYCOLOR;
            
        }else{
            
            lblName.textColor = [UIColor grayColor];
        }
        
        UIImageView *imageState = [[UIImageView alloc]initWithFrame:CGRectMake(146-20, 0, 20, 20)];
        imageState.image = [UIImage imageNamed:@"homework阅.png"];
        imageState.tag = 3;
        imageState.hidden = YES;
        [btn addSubview:imageState];
        [imageState release];
        
    }
    
    [studentScroll setContentSize:CGSizeMake(510-43, ([muarr count]/3+1)*(62+5))];
}

-(void)btnAction:(UIButton *)btn{
    
    if (btn.tag != selectStudent) {
        
        NSMutableDictionary *tempDict = [muWorkStuentList objectAtIndex:btn.tag - 1000];
        selectStuDict = tempDict;
        
        infoLabel.text = [NSString stringWithFormat:@"%@(%@)",[actDict objectForKey:@"act_title"],[tempDict objectForKey:@"a_nickname"]];

        
        if ([[tempDict objectForKey:@"hd_status"] intValue] !=0) {
            
            [self teacherSelectStudent:btn.tag -1000];
            
            NSLog(@"学生提交了作业，可以批改");
        }else{
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"该学生没有提交作业!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
            [alert release];
            
            NSLog(@"do nothing");
            
        }
    }
   
    
    if (selectStudent !=0) {
        UIButton *preBtn = (UIButton *)[studentScroll viewWithTag:selectStudent];
        [preBtn setImage:[UIImage imageNamed:@"homework学生底.png"] forState:UIControlStateNormal];
    }
    
    [btn setImage:[UIImage imageNamed:@"homework学生底选中.png"] forState:UIControlStateNormal];

    selectStudent = btn.tag;
    
}

#pragma mark 选择学生代理
-(void)teacherSelectStudent:(int)indexStu{
    
   
    
    [UIView animateWithDuration:0.2 animations:^(void){
        
        studentView.frame = CGRectMake(43-510, 48, 510, 420);
        
    }];
    
    [self removeTheStudentDb];
    index = 0;
    
    
    NSDictionary *dictPara = [muWorkStuentList objectAtIndex:indexStu];
    //hd_status
    NSLog(@"dictpara is %@",dictPara);
    
    if ([[dictPara objectForKey:@"hd_status"] intValue]==0) {
        return;
    }
    if (requestOther) {
        [requestOther cancel];
        requestOther.delegate=nil;
        [requestOther release];
        requestOther = nil;
    }
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    requestOther=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestOther setDelegate:self];
    
    
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    [postDict setObject:[dictPara objectForKey:@"a_id"] forKey:@"args[stu_id]"];
    
    [postDict setObject:@"JSON" forKey:@"format"];
    if ([[actDict objectForKey:@"act_type"] intValue] == 1) {
        
        [postDict setObject:@"Homework.correct" forKey:@"method"];
        [postDict setObject:[dictPara objectForKey:@"h_id"] forKey:@"args[h_id]"];
        
    }else{
        [postDict setObject:@"Classwork.correct" forKey:@"method"];
        [postDict setObject:[dictPara objectForKey:@"h_id"] forKey:@"args[cw_id]"];
        
    }
    
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestOther setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestOther buildPostBody];
    [requestOther setTimeOutSeconds:30];
    [requestOther startAsynchronous];
    [requestOther setDidFinishSelector:@selector(mySuccessJiancha:)];
    [requestOther setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
}
-(void)mySuccessJiancha:(id)sender{
    
    NSString *str = [sender responseString];
    NSMutableDictionary *muDict = [str JSONValue];
    NSLog(@"mudict is %@",muDict);
    if (daanDict) {
        [daanDict removeAllObjects];
        [daanDict release];
        daanDict = nil;
    }
    daanDict = [[[muDict objectForKey:@"hd_answer"] JSONValue] mutableCopy];
    
    if ([muDict objectForKey:@"picture_answer"]) {
        if ([(NSArray *)[muDict objectForKey:@"picture_answer"] count]>0) {
            
            for (int i=0; i<[muArrContent count]; i++) {
                
                NSMutableDictionary *dict2 = [muArrContent objectAtIndex:i];
                
                if ([[dict2 objectForKey:@"to_type"] intValue] == 5) {
                    
                    NSString *dbName =[NSString stringWithFormat:@"answers%@.db",[dict2 objectForKey:@"to_id"]];
                    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
                    NSString *documentDirectory = [paths objectAtIndex:0];
                    NSString *dbPath = [documentDirectory stringByAppendingPathComponent:dbName];
                    NSFileManager *manager = [NSFileManager defaultManager];
                    if ([manager fileExistsAtPath:dbPath]) {
                        [manager removeItemAtPath:dbPath error:nil];
                    }
                    FMDatabase *db = [FMDatabase databaseWithPath:dbPath];
                    if (![db open]) {
                        //NSLog(@"Could not open db.");
                    }
                    [db executeUpdate:@"CREATE TABLE IF NOT EXISTS handwriting(ha_id text PRIMARY KEY,ha_title text,ha_bitmap blob,ba_bitmap blob,sa_bitmap blob)"];
                    
                    
                    NSArray *arr = [[muDict objectForKey:@"picture_answer"] objectForKey:[dict2 objectForKey:@"to_id"]];
                    for (int i=0; i<[arr count]; i++) {
                        NSString *strURL = [arr objectAtIndex:i];
                        NSLog(@"strURL is %@",strURL);
                        NSData *data = [[NSData alloc] initWithContentsOfURL:[NSURL URLWithString:strURL]];
                        
                        
                        
                        NSArray *arr2 = [strURL componentsSeparatedByString:@"/"];
                        NSString *strFileName = [arr2 objectAtIndex:[arr2 count] -1];
                        NSLog(@"strFileName is %@",strFileName);
                        
                        NSString *strID = [strFileName substringToIndex:[strFileName length]-4];
                        
                        NSLog(@"strID is %@",strID);
                        NSArray *arr3 = [strID componentsSeparatedByString:@"-"];
                        int  currentPage = [[arr3 objectAtIndex:1] intValue];
                        NSLog(@"curretnPagei s%d",currentPage);
                        
                        [db executeUpdate:@"INSERT OR REPLACE INTO handwriting(ha_id,ha_title,ba_bitmap) VALUES (?,?,?)",[NSString stringWithFormat:@"%d",currentPage],strFileName, data];
                        
                    }
                }
            }
        }
        
    }
    
    [self addTikuStateImage];
    
    [self loadContentView];

    
}


-(void)moveLeft{
    
    
    
    [self btnNextClick];
}
-(void)moveRight{
    
    
    
    [self btnUPClick];
}
-(void)btnUPClick{
    
    if (index>0) {
        
        
        CATransition *animation = [CATransition animation];
        [animation setDuration:0.3f];
        [animation setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseIn]];
        [animation setType:@"push"];
        [animation setSubtype: kCATransitionFromLeft];
        [mainScrollview.layer addAnimation:animation forKey:@"pushRight"];
        if (doHomeView) {
            [doHomeView.layer addAnimation:animation forKey:@"pushRight2"];
            
        }
        
        
        index--;
        [self loadContentView];
    }
}

-(void)btnNextClick{
    
    if (index<[muArrContent count]-1) {
        
        
        CATransition *animation = [CATransition animation];
        [animation setDuration:0.3f];
        [animation setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseIn]];
        [animation setType:@"push"];
        [animation setSubtype: kCATransitionFromRight];
        [mainScrollview.layer addAnimation:animation forKey:@"pushLeft"];
        if (doHomeView) {
            
            [doHomeView.layer addAnimation:animation forKey:@"pushLeft2"];
            
        }
        
        index++;
        
        [self loadContentView];
    }
}
-(void)loadContentView{
    NSMutableDictionary *subDict = [muArrContent objectAtIndex:index];
    
    for (UIView *v in [tikuScro subviews]) {
        v.layer.borderColor = [UIColor clearColor].CGColor;
    }
    
    UIView *tempBtn = [tikuScro viewWithTag:index +500];
    tempBtn.layer.borderColor = [UIColor redColor].CGColor;
    
    
    if (doHomeView) {
        [doHomeView saveCurrentToDatabase];
        [doHomeView removeFromSuperview];
        doHomeView = nil;
    }
    [[self.view viewWithTag:2] removeFromSuperview];
    
    //加载题库
    NSString *strImgURL = [subDict objectForKey:@"path"];
    NSString *strFile=[FileManageUnit getFile:strImgURL];
    
    if([FileManageUnit fileIsExist:strFile]==NO){
        
        dispatch_async(dispatch_get_global_queue(0, 0),^(void){
        
            NSData *imgData = [[[NSData alloc] initWithContentsOfURL:[NSURL URLWithString:strImgURL]] autorelease];
            
                       
            dispatch_async(dispatch_get_main_queue(), ^(void){
        
                UIImage *image=[[UIImage alloc]initWithData:imgData];
                if (strFile) {
                    [imgData writeToFile:strFile atomically:YES];
                    
                }
                topicImage.image = image;
                [image release];
            
                topicImage.frame = CGRectMake(topicImage.frame.origin.x, topicImage.frame.origin.y, topicImage.image.size.width, topicImage.image.size.height);
                [mainScrollview setContentSize:CGSizeMake(topicImage.image.size.width, topicImage.image.size.height+30)];
        
            });
            
        });

    }else{
        
        
        UIImage *image=[[UIImage alloc]initWithContentsOfFile:strFile];
        topicImage.image = image;
        [image release];
        
        topicImage.frame = CGRectMake(topicImage.frame.origin.x, topicImage.frame.origin.y, topicImage.image.size.width, topicImage.image.size.height);
        [mainScrollview setContentSize:CGSizeMake(topicImage.image.size.width, topicImage.image.size.height+30)];

    }

    
    NSLog(@"subDict is %@",subDict);
    
    notTouch.hidden = NO;
    if ([[subDict objectForKey:@"to_type"] intValue] == 1) {
        
        lblTitle.text = [NSString stringWithFormat:@"%d.单选题",index+1];
        
        
        OneSelectView *view = [[OneSelectView alloc] initWithFrame:CGRectMake(512,54,512,690)];
        view.tag = 2;
        view.isShowRightAnswer = 0;
        view.backgroundColor = [UIColor clearColor];
        [self.view addSubview:view];
        [view release];
        
        [view changUI:subDict daan:daanDict index:index];
    }
    if ([[subDict objectForKey:@"to_type"] intValue] == 2) {
        
        
        lblTitle.text = [NSString stringWithFormat:@"%d.多选题",index+1];

        
        ManySelectView *view = [[ManySelectView alloc] initWithFrame:CGRectMake(512,54,512,690)];
        view.isShowRightAnswer = 0;

        view.tag = 2;
        [self.view addSubview:view];
        [view release];
        
        [view changUI:subDict daan:daanDict index:index];
    }
    if ([[subDict objectForKey:@"to_type"] intValue] == 3) {
        
        lblTitle.text = [NSString stringWithFormat:@"%d.填空题",index+1];

        
        TiankongView *view = [[TiankongView alloc] initWithFrame:CGRectMake(512,54,512,690)];
        view.isShowRightAnswer = 0;

        view.tag = 2;
        [self.view addSubview:view];
        [view release];
        
        [view changUI:subDict daan:daanDict index:index];
    }
    if ([[subDict objectForKey:@"to_type"] intValue] == 4) {
        
        lblTitle.text = [NSString stringWithFormat:@"%d.判断题",index+1];

        
        PanduanView *view = [[PanduanView alloc] initWithFrame:CGRectMake(512,54,512,690)];
        view.tag = 2;
        view.isShowRightAnswer = 0;

        [self.view addSubview:view];
        [view release];
        
        [view changUI:subDict daan:daanDict index:index];
    }
    if ([[subDict objectForKey:@"to_type"] intValue] == 5) {
        
        notTouch.hidden = YES;
        lblTitle.text = [NSString stringWithFormat:@"%d.简答题",index+1];

        
        doHomeView = [[DatiView alloc] initWithFrame:CGRectMake(512,54,512,690)];
        doHomeView.delegate = self;
        [self.view addSubview:doHomeView];
        [doHomeView release];
        
        [doHomeView setTo_Id:[[subDict objectForKey:@"to_id"] intValue]];
         
        
    }
     
    [self.view bringSubviewToFront:notTouch];
    [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
    
    
}
//练习或者作业的详情.
-(void)mySuccessDetailWork:(id)sender{
    
    NSString *str=[sender responseString];
    
    NSMutableDictionary *muDict = [str JSONValue];
    
    
    
    
    muArrContent = [[[[muDict objectForKey:@"info"] objectForKey:@"list"] objectForKey:@"topic"] mutableCopy];
    
    for (int i=0; i<[muArrContent count]; i++) {
        
        NSMutableDictionary *dict = [muArrContent objectAtIndex:i];
        
        
        UIButton *btn = [[UIButton alloc] initWithFrame:CGRectMake(i%3*(115+30)+20,i/3*(40+20)+20, 115, 40)];
        btn.backgroundColor = MYCOLOR;
        btn.tag = i+500;
        [btn addTarget:self action:@selector(selectTimu:) forControlEvents:UIControlEventTouchUpInside];
        btn.titleLabel.font = [UIFont boldSystemFontOfSize:18];
        if ([[dict objectForKey:@"to_type"] intValue] == 1) {
            [btn setTitle:[NSString stringWithFormat:@"%d.单选题",i+1] forState:UIControlStateNormal];
        }
        if ([[dict objectForKey:@"to_type"] intValue] == 2) {
            [btn setTitle:[NSString stringWithFormat:@"%d.多选题",i+1] forState:UIControlStateNormal];
        }
        if ([[dict objectForKey:@"to_type"] intValue] == 3) {
            [btn setTitle:[NSString stringWithFormat:@"%d.填空题",i+1] forState:UIControlStateNormal];
        }
        if ([[dict objectForKey:@"to_type"] intValue] == 4) {
            [btn setTitle:[NSString stringWithFormat:@"%d.判断题",i+1] forState:UIControlStateNormal];
        }
        if ([[dict objectForKey:@"to_type"] intValue] == 5) {
            [btn setTitle:[NSString stringWithFormat:@"%d.简答题",i+1] forState:UIControlStateNormal];
        }
        [btn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        btn.layer.borderWidth = 2.0;
        btn.layer.masksToBounds = YES;
        btn.layer.borderColor = [UIColor clearColor].CGColor;
        [tikuScro addSubview:btn];
        [btn release];
        
    }
    [tikuScro setContentSize:CGSizeMake(507,([muArrContent count]/3+1)*(40+20)+20)];
    
    
    daanDict = [[NSMutableDictionary alloc] init];
    
    for (int i=0; i<[muArrContent count]; i++) {
        
        NSMutableDictionary *dict2 = [muArrContent objectAtIndex:i];
        
        if ([[dict2 objectForKey:@"to_type"] intValue] == 1 || [[dict2 objectForKey:@"to_type"] intValue] == 2 ||[[dict2 objectForKey:@"to_type"] intValue] == 4) {
            
            [daanDict setObject:@"-1" forKey:[dict2 objectForKey:@"to_id"]];
            
        }else if([[dict2 objectForKey:@"to_type"] intValue] == 5){
            
            [daanDict setObject:@"" forKey:[dict2 objectForKey:@"to_id"]];
            
            
        }else if([[dict2 objectForKey:@"to_type"] intValue] == 3){
            
            
            NSArray *arr = [[dict2 objectForKey:@"to_answer"] JSONValue];
            NSMutableArray *muArr = [[NSMutableArray alloc] init];
            for (int i=0;i<[arr count];i++) {
                [muArr addObject:@""];
            }
            [daanDict setObject:[muArr JSONFragment] forKey:[dict2 objectForKey:@"to_id"]];
            
        }
    }
   
    
    [self loadContentView];
    
}
-(void)addTikuStateImage{
    
    [keguantiDict removeAllObjects];
    
    for (UIView *v in [tikuScro subviews]) {
        [[v viewWithTag:33] removeFromSuperview];
    }
    
    for (int i=0; i<[muArrContent count]; i++) {
        
        NSMutableDictionary *dict2 = [muArrContent objectAtIndex:i];
        
        if ([[dict2 objectForKey:@"to_type"] intValue] == 1 || [[dict2 objectForKey:@"to_type"] intValue] == 2 ||[[dict2 objectForKey:@"to_type"] intValue] == 4) {
            
            NSString *answer  = [[[dict2 objectForKey:@"to_answer"] JSONValue] objectAtIndex:0];
            
            NSString *stuAns = [daanDict objectForKey:[dict2 objectForKey:@"to_id"]];
            
            NSLog(@"answer is %@ ,struans is %@",answer,stuAns);
            
            if ([answer isEqualToString:stuAns]) {
                [keguantiDict setObject:@"1" forKey:[dict2 objectForKey:@"to_id"]];
                
                UIImageView *image = [[UIImageView alloc]initWithFrame:CGRectMake(115-24, 0, 24, 24)];
                image.image = [UIImage imageNamed:@"homework对.png"];
                image.tag = 33;
                [[tikuScro viewWithTag:500+i] addSubview:image];
                [image release];
            }else{
                [keguantiDict setObject:@"0" forKey:[dict2 objectForKey:@"to_id"]];

                
                UIImageView *image = [[UIImageView alloc]initWithFrame:CGRectMake(115-24, 0, 24, 24)];
                image.image = [UIImage imageNamed:@"homework错.png"];
                image.tag = 33;
                [[tikuScro viewWithTag:500+i] addSubview:image];
                [image release];
            }
            
            
        }
    }
    
}


-(void)selectTimu:(UIButton *)btn{
    if (index != btn.tag -500) {
        
        index = btn.tag -500;
        [self loadContentView];
    }
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_6_0

-(NSUInteger)supportedInterfaceOrientations
{
    return UIInterfaceOrientationMaskLandscape;
}

- (BOOL)shouldAutorotate {
    return YES;
}

#endif


// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationLandscapeLeft  ||
            interfaceOrientation == UIInterfaceOrientationLandscapeRight);
    
}
-(void)dealloc{
    [requestDetail cancel];
    requestDetail.delegate = nil;
    [requestDetail release];
    
    [muArrContent release];
    [daanDict release];
    if (apId == 0) {
        
        [courseDict release];
        [actDict release];
        
    }
    
    [super dealloc];
}
@end

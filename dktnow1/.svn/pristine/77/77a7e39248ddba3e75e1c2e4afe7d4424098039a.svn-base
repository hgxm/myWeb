
//
//  DatiView.m
//  ClassRoomStudent
//
//  Created by apple  on 13-7-9.
//  Copyright (c) 2013年 apple . All rights reserved.
//

#import "DatiView.h"

@implementation DatiView
@synthesize delegate;


-(void)dealloc{
    
    [db release];
    [super dealloc];
}
-(void)setTo_Id:(int)myId{
    
    to_id = myId;
    NSLog(@"to_id is %d",to_id);
    
    NSString *dbName =[NSString stringWithFormat:@"answers%d.db",to_id];
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentDirectory = [paths objectAtIndex:0];
    NSString *dbPath = [documentDirectory stringByAppendingPathComponent:dbName];
    db = [[FMDatabase alloc] initWithPath:dbPath];
    if (![db open]) {
        //NSLog(@"Could not open db.");
    }
    [db executeUpdate:@"CREATE TABLE IF NOT EXISTS handwriting(ha_id text PRIMARY KEY,ha_title text,ha_bitmap blob,ba_bitmap blob,sa_bitmap blob)"];
    FMResultSet *rs2 = [db executeQuery:@"SELECT COUNT(*) FROM handwriting"];
    while ([rs2 next]) {
        totalPage = [rs2 intForColumnIndex:0];
    }
    [rs2 close];
    
    if (totalPage == 0) {
        totalPage = 1;
    }
    lblNumber.text = [NSString stringWithFormat:@"%d/%d",currentPage,totalPage];
    
    [self loadSubViews];
}
-(void)saveCurrentToDatabase{
    
    
    
    
    
    UIImage *theImage=[ToolClass imageFromView:smoothView];
    NSData *data = UIImagePNGRepresentation(theImage);
    
    [self setViewShow:YES];
    UIImage *saveImage = [ToolClass imageFromView:self];
    [self setViewShow:NO];
    
    NSData *saveData = UIImagePNGRepresentation(saveImage);
    
    if (backView.image) {
        
         NSData *baData = UIImagePNGRepresentation(backView.image);
        
        [db executeUpdate:@"INSERT OR REPLACE INTO handwriting(ha_id,ha_title,ha_bitmap,ba_bitmap,sa_bitmap) VALUES (?,?,?,?,?)",[NSString stringWithFormat:@"%d",currentPage],[NSString stringWithFormat:@"%d-%d.png",to_id,currentPage], data,baData,saveData];
    }else{
        
        [db executeUpdate:@"INSERT OR REPLACE INTO handwriting(ha_id,ha_title,ha_bitmap,sa_bitmap) VALUES (?,?,?,?)",[NSString stringWithFormat:@"%d",currentPage],[NSString stringWithFormat:@"%d-%d.png",to_id,currentPage], data,saveData];
    }
   
    
    
    
    
}
-(void)setViewShow:(BOOL)flag{
    
   
    for (UIView *v in [self subviews]) {
        if ([v isKindOfClass:[SmoothLineView class]]) {
            v.hidden = NO;
        }else if([v isKindOfClass:[SetDrawLine class]] ||[v isKindOfClass:[ClearView class]]){
            v.hidden = YES;
        }else{
            v.hidden = flag;
        }
    }
}
-(void)setBackImage:(UIImage *)image{
    
    backView.image = image;
    
}
- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        currentPage = 1;        
        
        backView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
        backView.userInteractionEnabled = YES;
        backView.contentMode = UIViewContentModeScaleAspectFit;
        [self addSubview:backView];
        [backView release];
        
        /*
        UIPanGestureRecognizer *panGestureBackView = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(panPieceBackView:)];
        [panGestureBackView setMaximumNumberOfTouches:2];
        [backView addGestureRecognizer:panGestureBackView];
        [panGestureBackView release];
         
         */
        
        for (int i=0; i<2; i++) {
            UIButton *btn = [[UIButton alloc] initWithFrame:CGRectMake(360+i*50+50, 10, 35, 35)];
            btn.backgroundColor = [UIColor clearColor];
            [btn addTarget:self action:@selector(btnselect:) forControlEvents:UIControlEventTouchDown];
            btn.tag = 100+i;
            if (i==0||i==1) {
                UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(pressedLongBtn:)];
                [btn addGestureRecognizer:longPress];
                [longPress release];
            }
            switch (i) {
                case 0:
                    [btn setImage:[UIImage imageNamed:@"画笔2.png"] forState:UIControlStateNormal];
                    break;
                case 1:
                    [btn setImage:[UIImage imageNamed:@"homework橡皮1.png"] forState:UIControlStateNormal];
                    break;

                case 2:
                    [btn setImage:[UIImage imageNamed:@"homework拍照1.png"] forState:UIControlStateNormal];
                    [btn setImage:[UIImage imageNamed:@"homework拍照.png"] forState:UIControlStateHighlighted];
                    break;

                    
                default:
                    break;
            }
            [self addSubview:btn];
            [btn release];
        }
        
//        UIButton *btnFinish = [[UIButton alloc] initWithFrame:CGRectMake(840, 14, 56, 25)];
//        [btnFinish addTarget:self action:@selector(btnFinishAction) forControlEvents:UIControlEventTouchUpInside];
//        [btnFinish setImage:[UIImage imageNamed:@"dt完成.png"] forState:UIControlStateNormal];
//        [self addSubview:btnFinish];
//        [btnFinish release];
//        
        
        
        btnUp = [[UIButton alloc] initWithFrame:CGRectMake(500-110, 640, 40, 40)];
        btnUp.backgroundColor = [UIColor clearColor];
        [btnUp setBackgroundImage:[UIImage imageNamed:@"上题.png"] forState:UIControlStateNormal];
        [btnUp addTarget:self action:@selector(btnUpAction) forControlEvents:UIControlEventTouchUpInside];
        [self addSubview:btnUp];
        [btnUp release];
        
        lblNumber = [[UILabel alloc] initWithFrame:CGRectMake(525-110, 640, 60, 40)];
        lblNumber.backgroundColor = [UIColor clearColor];
        lblNumber.textAlignment = NSTextAlignmentCenter;
        lblNumber.text = [NSString stringWithFormat:@"%d/%d",currentPage,totalPage];
        [self addSubview:lblNumber];
        [lblNumber release];
        
        btnNext = [[UIButton alloc] initWithFrame:CGRectMake(570-110, 640, 40, 40)];
        btnNext.backgroundColor = [UIColor clearColor];
        [btnNext setBackgroundImage:[UIImage imageNamed:@"下题.png"] forState:UIControlStateNormal];
        [btnNext addTarget:self action:@selector(btnNextAction) forControlEvents:UIControlEventTouchUpInside];
        [self addSubview:btnNext];
        [btnNext release];
        
        
        set_view = [[SetDrawLine alloc]initWithFrame:CGRectMake(0, 90, 420, 522)];
        set_view.setDelegate = self;
        set_view.hidden = YES;
        set_view.backgroundColor = [UIColor clearColor];
        [self addSubview:set_view];
        [set_view release];
        
        
        
        clear_view = [[ClearView alloc]initWithFrame:CGRectMake(0, 200, 420, 217)];
        clear_view.cleardele = self;
        clear_view.hidden = YES;
        [self addSubview:clear_view];
        [clear_view release];
        
        

        
    }
    return self;
}

-(void)pressedLongBtn:(UILongPressGestureRecognizer *) gestureRecognizer{
    
    switch (gestureRecognizer.state) {
        case UIGestureRecognizerStateBegan:
            
        {
            if (gestureRecognizer.view.tag == 100) {
                [set_view setNeedsDisplayView];
                set_view.hidden = NO;
            }else if(gestureRecognizer.view.tag == 101){
                [clear_view setNeedsDisplayMyView];
                clear_view.hidden = NO;
            }
            [self btnselect:(UIButton*)[self viewWithTag:gestureRecognizer.view.tag]];
            NSLog(@"press long began");
            break;
        case UIGestureRecognizerStateEnded:
            
            NSLog(@"press long ended");
            break;
        case UIGestureRecognizerStateFailed:
            NSLog(@"press long failed");
            break;
        case UIGestureRecognizerStateChanged:
            //移动
            
            NSLog(@"press long changed");
            break;
        default:
            NSLog(@"press long else");
            break;
        }
    }
    
    
}
#pragma mark cleardelegate
-(void)changeClearWidth:(float)width{
    
    smoothView.lineWidth=width;
    [[NSUserDefaults standardUserDefaults]setObject:[NSNumber numberWithFloat:width] forKey:@"clear_width"];
    
}
-(void)clearScreen{
    
    
    
    [self removeSubViews];
    
    
    smoothView=[[SmoothLineView alloc]initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
    smoothView.isNeedDraw = YES;
    [self addSubview:smoothView];
    [smoothView release];
    
    
    smoothView.lineWidth = [[[NSUserDefaults standardUserDefaults] objectForKey:@"width"] floatValue];
    smoothView.lineColor = [UIColor clearColor];
    
//    [self setBackImage:nil];
    [self sendSubviewToBack:smoothView];
    [self sendSubviewToBack:backView];

    
}
#pragma mark setDrawDelegate
-(void)changeWidth:(float)width{
    
    
    smoothView.lineWidth = width;
    
    [[NSUserDefaults standardUserDefaults]setObject:[NSNumber numberWithFloat:width] forKey:@"width"];
    
}
-(void)changeColor:(UIColor *)color{
    
    smoothView.lineColor=color;
    
    
    CGFloat components[3];
    [ToolClass getRGBComponents:components forColor:color];
    [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithFloat:components[0]] forKey:@"color_r"];
    [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithFloat:components[1]] forKey:@"color_g"];
    [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithFloat:components[2]] forKey:@"color_b"];
    
    
}
-(void)btnselect:(UIButton *)btn{
    
    
    if (btn.tag == 100) {
        
        statue = btn.tag;

        
        float r,g,b;
        r = [[[NSUserDefaults standardUserDefaults]objectForKey:@"color_r"] floatValue];
        g = [[[NSUserDefaults standardUserDefaults]objectForKey:@"color_g"] floatValue];
        b = [[[NSUserDefaults standardUserDefaults]objectForKey:@"color_b"] floatValue];
        UIColor *color = [UIColor colorWithRed:r green:g blue:b alpha:1];
        smoothView.lineColor = color;
        smoothView.lineWidth = [[[NSUserDefaults standardUserDefaults] objectForKey:@"width"] floatValue];
        
        
        [btn setImage:[UIImage imageNamed:@"画笔2.png"] forState:UIControlStateNormal];
        
        [((UIButton *)[self viewWithTag:101]) setImage:[UIImage imageNamed:@"homework橡皮1.png"] forState:UIControlStateNormal];
        [((UIButton *)[self viewWithTag:102]) setImage:[UIImage imageNamed:@"homework拍照1.png"] forState:UIControlStateNormal];
        
    }else if(btn.tag == 101){
        statue = btn.tag;

        
        smoothView.lineWidth = [[[NSUserDefaults standardUserDefaults] objectForKey:@"clear_width"] floatValue];
        smoothView.lineColor = [UIColor clearColor];
        
        [btn setImage:[UIImage imageNamed:@"橡皮2.png"] forState:UIControlStateNormal];
        [((UIButton *)[self viewWithTag:100]) setImage:[UIImage imageNamed:@"homework画笔1.png"] forState:UIControlStateNormal];
        [((UIButton *)[self viewWithTag:102]) setImage:[UIImage imageNamed:@"homework拍照1.png"] forState:UIControlStateNormal];

        
    }else{
        
        if (delegate&&[delegate respondsToSelector:@selector(clickTakePicture)]) {
            [delegate clickTakePicture];
        }
        
//        [btn setImage:[UIImage imageNamed:@"homework拍照.png"] forState:UIControlStateNormal];
//        
//        [((UIButton *)[self viewWithTag:100]) setImage:[UIImage imageNamed:@"homework画笔1.png"] forState:UIControlStateNormal];
//        [((UIButton *)[self viewWithTag:101]) setImage:[UIImage imageNamed:@"homework橡皮1.png"] forState:UIControlStateNormal];

    }
}

-(void)removeSubViews{

    [smoothView removeFromSuperview];

}
-(void)loadSubViews{
    
    FMResultSet *rs = [db executeQuery:@"SELECT * FROM handwriting WHERE ha_id = ?",[NSString stringWithFormat:@"%d",currentPage]];
    UIImage *Bitmap=nil;
    UIImage *backImage = nil;
    
    while ([rs next]) {
        
        NSData *imageData=[rs dataForColumn:@"ha_bitmap"];
        Bitmap=[[UIImage alloc] initWithData:imageData];
        
        NSData *backImageData = [rs dataForColumn:@"ba_bitmap"];
        if (backImageData) {
            backImage=[[UIImage alloc] initWithData:backImageData];
            
        }        
    }
    
    [self setBackImage:backImage];
    [backImage release];
    
    
    smoothView=[[SmoothLineView alloc]initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
    smoothView.isNeedDraw = YES;
    [self addSubview:smoothView];
    [smoothView release];
    
    [smoothView addLayer:Bitmap];
    [Bitmap release];
    
    if (statue == 100 || statue == 0) {
        
        float r,g,b;
        r = [[[NSUserDefaults standardUserDefaults]objectForKey:@"color_r"] floatValue];
        g = [[[NSUserDefaults standardUserDefaults]objectForKey:@"color_g"] floatValue];
        b = [[[NSUserDefaults standardUserDefaults]objectForKey:@"color_b"] floatValue];
        
        
        UIColor *color = [UIColor colorWithRed:r green:g blue:b alpha:1];
        smoothView.lineColor = color;
        smoothView.lineWidth = [[[NSUserDefaults standardUserDefaults] objectForKey:@"width"] floatValue];
    }else{
        smoothView.lineWidth = [[[NSUserDefaults standardUserDefaults] objectForKey:@"width"] floatValue];
        smoothView.lineColor = [UIColor clearColor];
        
    }
    
   
    
    
    [self bringSubviewToFront:[self viewWithTag:100]];
    [self bringSubviewToFront:[self viewWithTag:101]];
    [self bringSubviewToFront:[self viewWithTag:102]];
    
    [self bringSubviewToFront:btnNext];
    [self bringSubviewToFront:btnUp];
    [self bringSubviewToFront:lblNumber];
    
    [self bringSubviewToFront:set_view];
    [self bringSubviewToFront:clear_view];

   

}




-(void)btnUpAction{

    if (currentPage>1) {
        
        [self saveCurrentToDatabase];
        
        [self removeSubViews];
        
        currentPage --;
        
        [self loadSubViews];
        
        lblNumber.text = [NSString stringWithFormat:@"%d/%d",currentPage,totalPage];
        
    }

}
-(void)btnNextAction{
    if (currentPage == totalPage) {
        totalPage ++;
    }
    [self saveCurrentToDatabase];
    
    [self removeSubViews];
    
    currentPage ++;
    lblNumber.text = [NSString stringWithFormat:@"%d/%d",currentPage,totalPage];
    [self loadSubViews];
    

    
}
-(void)btnFinishAction{
    
    [self saveCurrentToDatabase];
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"答题板内容已经保存！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];
}

-(void)panPieceBackView:(UIPanGestureRecognizer *)gestureRecognizer{
    
    UIView *piece = [[gestureRecognizer view] superview];
	if ([gestureRecognizer state] == UIGestureRecognizerStateBegan || [gestureRecognizer state] == UIGestureRecognizerStateChanged) {
        
        [[self superview] bringSubviewToFront:self];
        
		CGPoint translation = [gestureRecognizer translationInView:[piece superview]];
        [piece setCenter:CGPointMake([piece center].x + translation.x, [piece center].y+ translation.y)];
        
		[gestureRecognizer setTranslation:CGPointZero inView:[piece superview]];
	}
}


/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end

//
//  ImageViewController.m
//  ClassRoomTeacher
//
//  Created by apple  on 13-7-5.
//  Copyright (c) 2013å¹´ apple . All rights reserved.
//

#import "ImageViewController.h"

@interface ImageViewController ()

@end

@implementation ImageViewController
@synthesize strURL;
@synthesize type;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}
-(void)btnBackAction{

    
    [self.navigationController popViewControllerAnimated:YES];
    
}
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor blackColor];

    
    scrollView2 = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, 1024, 748)];
    scrollView2.backgroundColor = [UIColor clearColor];
    scrollView2.delegate = self;
    [scrollView2 setMaximumZoomScale:3.0];
    [scrollView2 setMinimumZoomScale:1.0];
    [self.view addSubview:scrollView2];
    [scrollView2 release];
    
    imageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 100, 100)];
    [scrollView2 addSubview:imageView];
    [imageView release];
    
    UIButton *btnBack=[[UIButton alloc]initWithFrame:CGRectMake(5, 5, 42, 30)];
    [btnBack addTarget:self action:@selector(btnBackAction) forControlEvents:UIControlEventTouchUpInside];
    [btnBack setImage:[UIImage imageNamed:@"fanhui.png"] forState:UIControlStateNormal ];
    [self.view addSubview:btnBack];
    [btnBack release];
    
    if (type == 0) {
        [NSThread detachNewThreadSelector:@selector(downLoadImage:) toTarget:self withObject:strURL];

    }else{
        localImage = [[UIImage alloc] initWithContentsOfFile:strURL];
        [self performSelectorOnMainThread:@selector(loadScrollViewContent:) withObject:localImage waitUntilDone:NO];

    }
	// Do any additional setup after loading the view.
}
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView{
    return imageView;
}
- (void)scrollViewDidZoom:(UIScrollView *)scrollView{
    
    UIImage *img=imageView.image;
    
    float scale = scrollView.zoomScale;
    if (img.size.height*scale>=748) {
        
        imageView.frame=CGRectMake(1024/2-img.size.width*scale/2, 0, img.size.width*scale, img.size.height*scale);
    }
    if(img.size.width*scale>=1024){
        
        imageView.frame=CGRectMake(0, 748/2-img.size.height*scale/2, img.size.width*scale, img.size.height*scale);
    }
    if(img.size.width*scale>=1024&&img.size.height*scale>=748){
        
        
        imageView.frame=CGRectMake(0, 0, img.size.width*scale, img.size.height*scale);
    }
    if(img.size.width*scale<1024&&img.size.height*scale<748){
        
        imageView.frame=CGRectMake(1024/2-img.size.width*scale/2, 748/2-img.size.height*scale/2, img.size.width*scale, img.size.height*scale);
    }
    


}
-(void)loadScrollViewContent:(UIImage *)image{
    
    imageView.image = image;
    imageView.frame = CGRectMake(0, 0, image.size.width, image.size.height);
    imageView.center = scrollView2.center;
    [scrollView2 setContentSize:CGSizeMake(image.size.width, image.size.height)];
}
-(void)downLoadImage:(NSString *)strURL2{
    
    NSAutoreleasePool *pool=[[NSAutoreleasePool alloc]init];
    
    NSString *strFile=[FileManageUnit getFile:strURL2];
    UIImage *image;
    if([FileManageUnit fileIsExist:strFile]==NO){
        
        NSData *imgData = [[[NSData alloc] initWithContentsOfURL:[NSURL URLWithString:strURL2]] autorelease];
        image=[[UIImage alloc]initWithData:imgData];
        if (imgData) {
            [imgData writeToFile:strFile atomically:YES];
            
        }
        
    }else{
        NSData *imgData = [[[NSData alloc] initWithContentsOfFile:strFile] autorelease];
        image=[[UIImage alloc]initWithData:imgData];
        
    }
    [self performSelectorOnMainThread:@selector(loadScrollViewContent:) withObject:image waitUntilDone:NO];
    
    [pool drain];
    
}

-(void)dealloc{
    

    [localImage release];
    [strURL release];
    [super dealloc];
    
}
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_6_0

-(NSUInteger)supportedInterfaceOrientations
{
    return UIInterfaceOrientationMaskLandscape;
}

- (BOOL)shouldAutorotate {
    return YES;
}

#endif



// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationLandscapeLeft  ||
            interfaceOrientation == UIInterfaceOrientationLandscapeRight);
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end

//
//  AudioView.m
//  iPhoneStreamingPlayer
//
//  Created by apple  on 13-1-14.
//
//

#import "AudioView.h"
#import <QuartzCore/CoreAnimation.h>
#import <MediaPlayer/MediaPlayer.h>
#import <CFNetwork/CFNetwork.h>
@implementation AudioView
@synthesize strURL;
@synthesize deleDelegate;
- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        UIImageView *backImage=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
        backImage.image=[UIImage imageNamed:@"音频背景.png"];
        backImage.backgroundColor = [UIColor clearColor];
        backImage.userInteractionEnabled=YES;
        [self addSubview:backImage];
        [backImage release];
        
        UIPanGestureRecognizer *panGestureCaogao = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(panPieceCaogao:)];
        [panGestureCaogao setMaximumNumberOfTouches:2];
        [backImage addGestureRecognizer:panGestureCaogao];
        [panGestureCaogao release];
        
        lblTitle=[[UILabel alloc]initWithFrame:CGRectMake(10, 15, 300, 30)];
        lblTitle.text=@"测试音频";
        lblTitle.textColor=[UIColor colorWithRed:104.0/255 green:169.0/255 blue:236.0/255 alpha:1];
        lblTitle.font=[UIFont boldSystemFontOfSize:14];
        lblTitle.backgroundColor=[UIColor clearColor];
        [self addSubview:lblTitle];
        [lblTitle release];
        
        currentLbl=[[UILabel alloc]initWithFrame:CGRectMake(55, 55, 30, 30)];
        currentLbl.text=@"0:00";
        currentLbl.font=[UIFont systemFontOfSize:12];
        currentLbl.backgroundColor=[UIColor clearColor];
        [self addSubview:currentLbl];
        [currentLbl release];
        
        slider=[[UISlider alloc]initWithFrame:CGRectMake(90, 60,250, 20)];
        [slider addTarget:self action:@selector(sliderValue:) forControlEvents:UIControlEventValueChanged];
        [slider setMinimumValue:0];
        [slider setMaximumValue:100];
        [self addSubview:slider];
        [slider release];
        
        lastLbl=[[UILabel alloc]initWithFrame:CGRectMake(360, 55, 30, 30)];
        lastLbl.text=@"0:00";
        lastLbl.font=[UIFont systemFontOfSize:12];
        lastLbl.backgroundColor=[UIColor clearColor];
        [self addSubview:lastLbl];
        [lastLbl release];
        
        playBtn= [UIButton buttonWithType:UIButtonTypeCustom];
        playBtn.frame=CGRectMake(5, 45, 40, 40);
        playBtn.backgroundColor=[UIColor clearColor];
        playBtn.tag = 1;
        [playBtn setImageEdgeInsets:UIEdgeInsetsMake(10, 0, 0, 0)];
        [playBtn setContentVerticalAlignment:UIControlContentVerticalAlignmentCenter];
        [playBtn setImage:[UIImage imageNamed:@"播放.png"] forState:UIControlStateNormal];
        [playBtn addTarget:self action:@selector(buttonPressed:) forControlEvents:UIControlEventTouchUpInside];
        [self addSubview:playBtn];
        
        UIButton *closeBtn=[[UIButton alloc]initWithFrame:CGRectMake(self.frame.size.width-50, 15, 32, 32)];
        closeBtn.backgroundColor=[UIColor clearColor];
        [closeBtn addTarget:self action:@selector(closeBtnAction) forControlEvents:UIControlEventTouchDown];
        [closeBtn setImage:[UIImage imageNamed:@"关闭.png"] forState:UIControlStateNormal];
        [self addSubview:closeBtn];
        [closeBtn release];
        
    }
    return self;
}
-(void)setlblTitle:(NSString *)strTitle{
    
    lblTitle.text=strTitle;
}
-(void)closeBtnAction{
    if (deleDelegate && [deleDelegate respondsToSelector:@selector(removeMyself:)]) {
        [deleDelegate removeMyselfAudioView:self];
    }
    [self stopPlay];
    [self removeFromSuperview];
}
-(void)panPieceCaogao:(UIPanGestureRecognizer *)gestureRecognizer{
    
    UIView *piece = [[gestureRecognizer view] superview];
	if ([gestureRecognizer state] == UIGestureRecognizerStateBegan || [gestureRecognizer state] == UIGestureRecognizerStateChanged) {
        
        [[self superview] bringSubviewToFront:self];
        
		CGPoint translation = [gestureRecognizer translationInView:[piece superview]];
        [piece setCenter:CGPointMake([piece center].x + translation.x, [piece center].y+ translation.y)];
        
        
        
        CGRect rect=piece.frame;
        if (rect.origin.y<=0) {
            rect.origin.y=0;
        }
        if (rect.origin.x<=0) {
            rect.origin.x=0;
        }
        if (rect.origin.x+rect.size.width>=1024) {
            rect.origin.x=1024-rect.size.width;
        }
        if (rect.origin.y+rect.size.height>=748) {
            rect.origin.y=748-rect.size.height;
        }
        
        
        piece.frame=rect;
        
		[gestureRecognizer setTranslation:CGPointZero inView:[piece superview]];
	}
}
-(void)changeTimeLabel{
    
    currentLbl.text=[streamer currentTime];
    lastLbl.text=[streamer totalTime];
   
}


- (void)buttonPressed:(UIButton *)button
{
    
   
    
    [self createStreamer];

   
    if (streamer.isPlaying==NO)
    {

        [streamer start];


    }
    else
    {
        [streamer pause];


    
    }
}
-(void)sliderValue:(UISlider *)aSlider
{
	if (streamer.duration)
	{
		double newSeekTime = (aSlider.value / 100.0) * streamer.duration;
		[streamer seekToTime:newSeekTime];
	}
}
- (void)destroyStreamer
{
	if (streamer)
	{
		[[NSNotificationCenter defaultCenter]
         removeObserver:self
         name:ASStatusChangedNotification
         object:streamer];
		[progressUpdateTimer invalidate];
		progressUpdateTimer = nil;
		
		[streamer stop];
		[streamer release];
		streamer = nil;
	}
}
- (void)createStreamer
{
	if (streamer)
	{
		return;
	}
    
	[self destroyStreamer];
	//NSString *str=@"http://y1.eoews.com/assets/ringtones/2012/5/18/34049/oiuxsvnbtxks7a0tg6xpdo66exdhi8h0bplp7twp.mp3";
    
    
	NSString *escapedValue =
    [(NSString *)CFURLCreateStringByAddingPercentEscapes(nil,
                                                         (CFStringRef)strURL,
                                                         NULL,
                                                         NULL,
                                                         kCFStringEncodingUTF8)
     autorelease];
	NSURL *url = [NSURL URLWithString:escapedValue];
	streamer = [[AudioStreamer alloc] initWithURL:url];
	
	progressUpdateTimer =
    [NSTimer
     scheduledTimerWithTimeInterval:0.1
     target:self
     selector:@selector(updateProgress:)
     userInfo:nil
     repeats:YES];
	[[NSNotificationCenter defaultCenter]
     addObserver:self
     selector:@selector(playbackStateChanged:)
     name:ASStatusChangedNotification
     object:streamer];
    

}

- (void)playbackStateChanged:(NSNotification *)aNotification
{
	if ([streamer isWaiting])
	{
        [playBtn setImage:[UIImage imageNamed:@"缓冲.png"] forState:UIControlStateNormal];


	}
	else if ([streamer isPlaying])
	{
         [playBtn setImage:[UIImage imageNamed:@"暂倯.png"] forState:UIControlStateNormal];


	}else if ([streamer isPaused]){
    
         [playBtn setImage:[UIImage imageNamed:@"播放.png"] forState:UIControlStateNormal];

    }
	else if ([streamer isIdle])
	{
        [self changeTimeLabel];
		[self destroyStreamer];
         [playBtn setImage:[UIImage imageNamed:@"播放.png"] forState:UIControlStateNormal];

        
        //NSLog(@"isIdle");

	}
    
}

- (void)updateProgress:(NSTimer *)updatedTimer
{
    
    [self changeTimeLabel];
    
    if (![streamer isWaiting]) {
        double progress = streamer.progress;
        double duration = streamer.duration;
        [slider setEnabled:YES];
        [slider setValue:100 * progress / duration];
    }
   
    
//	if (streamer.bitRate != 0.0)
//	{
//		double progress = streamer.progress;
//		double duration = streamer.duration;
//		
//        
//        [self changeTimeLabel];
//		if (duration > 0)
//		{
//			//[positionLabel setText:
//            // [NSString stringWithFormat:@"Time Played: %.1f/%.1f seconds",
//            //  progress,
//            //  duration]];
//            
//            
//			[slider setEnabled:YES];
//			[slider setValue:100 * progress / duration];
//		}
//		else
//		{
//			[slider setEnabled:NO];
//		}
//	}
//	else
//	{
//		//positionLabel.text = @"Time Played:";
//	}
}
-(void)stopPlay{

    [streamer stop];
    [self destroyStreamer];

}
- (void)dealloc
{
    
    [strURL release];
	[self destroyStreamer];
	if (progressUpdateTimer)
	{
		[progressUpdateTimer invalidate];
		progressUpdateTimer = nil;
	}
	[super dealloc];
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end

//
//  ForClassViewController.m
//  ClassRoomTeacher
//
//  Created by apple  on 13-7-4.
//  Copyright (c) 2013年 apple . All rights reserved.
//

#import "ForClassViewController.h"
#import "PlayViewController.h"
#import "ImageViewController.h"
#import "PlayWordViewController.h"
#import "AvPlayer.h"
#import "StuentDoHomeWork.h"
@interface ForClassViewController ()

@end
#define offsety 53
#define offsetx 93
@implementation ForClassViewController
@synthesize hourDict;

@synthesize courseDict;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(void)clickCell:(NSMutableDictionary *)muDict{
    
    [self playResource:muDict];
}
-(void)mySuccessTalk:(id)sender{
    NSString *str=[sender responseString];
    
    NSMutableDictionary *muDict = [str JSONValue];
    if (muDict) {
        detailView = [[ZhezhaoView alloc]initWithFrame:CGRectMake(0, 0, 1024, 748)];
        detailView.delegate = self;
        [self.view addSubview:detailView];
        [detailView release];
        
        detailView.pretopselect = 17;//talk;
        [detailView addTableHead:contentSelDict];
        NSMutableArray *muarr = [[muDict objectForKey:@"info"] objectForKey:@"list"];
        [detailView changeContent:muarr];
        
    }
    
    NSLog(@"talk mudict is %@",muDict);
}
-(void)mySuccessDetail:(id)sender{
    NSString *str=[sender responseString];
    
    NSMutableDictionary *muDict = [str JSONValue];

    if ([[muDict objectForKey:@"status"] intValue] == 1) {
        
        detailView = [[ZhezhaoView alloc]initWithFrame:CGRectMake(0, 0, 1024, 748)];
        detailView.delegate = self;
        [self.view addSubview:detailView];
        [detailView release];
        
        NSDictionary *tempDict = contentSelDict;
        
        if ([[tempDict objectForKey:@"act_type"] intValue] == 3) {//文本
            
            detailView.pretopselect = 11;
            
            NSMutableDictionary *dict2 = [[muDict objectForKey:@"info"] objectForKey:@"list"];
            [detailView addNoteView:dict2];
            
        }else if ([[tempDict objectForKey:@"act_type"] intValue] == 1 || [[tempDict objectForKey:@"act_type"] intValue] == 2) {
        
            detailView.pretopselect = 10;
            
            NSMutableArray *tempArrdata = [[[muDict objectForKey:@"info"] objectForKey:@"list"] objectForKey:@"topic"];
            [detailView changeContent:tempArrdata];
        }else if ([[tempDict objectForKey:@"act_type"] intValue] == 4){
            
            detailView.pretopselect = 15;
            
            NSMutableArray *tempArrdata = [[[muDict objectForKey:@"info"] objectForKey:@"list"] objectForKey:@"link"];
            [detailView changeContent:tempArrdata];
        }else if ([[tempDict objectForKey:@"act_type"] intValue] == 5){
            
            
            detailView.pretopselect = 16;
            
            NSMutableArray *tempArrdata = [[[muDict objectForKey:@"info"] objectForKey:@"list"] objectForKey:@"resource"];
            [detailView changeContent:tempArrdata];
        }
        
        
        

    }
   
    
    NSLog(@"muDict is %@",muDict);
    
}
-(void)btnBackAction{
    
    [super btnBackAction];
    if ([self.view viewWithTag:7]) {
        AudioView *plTest=(AudioView *)[self.view viewWithTag:7];
        [plTest stopPlay];
    }
}
-(void)playResource:(NSMutableDictionary *)tempDict{
    
    
    NSString *documentsDirectory = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];
    NSString *dbName =[NSString stringWithFormat:@"%@.db",@"local"];
    NSString *dbPath = [documentsDirectory stringByAppendingPathComponent:dbName];
    FMDatabase *db = [FMDatabase databaseWithPath:dbPath];
    if (![db open]) {
        NSLog(@"Could not open db.");
    }
    FMResultSet *result = [db executeQuery:@"SELECT * FROM resour_table WHERE re_id = ?",[tempDict objectForKey:@"ar_id"]];
    BOOL isExists=[result next];
    if ([[tempDict objectForKey:@"m_id"] intValue] == 1) {
        
        NSString *localPath=nil;
        int type;
        if (isExists) {
            type = 1;
            localPath = [documentsDirectory stringByAppendingPathComponent:[result stringForColumn:@"localURL"]];
            
        }else{
            type = 0;
            localPath = [tempDict objectForKey:@"ar_savename"];
        } 
        ImageViewController *playVc = [[ImageViewController alloc] init];
        playVc.type = type;
        playVc.strURL = localPath;
        [self.navigationController pushViewController:playVc animated:YES];
        [playVc release];
    }else if([[tempDict objectForKey:@"m_id"] intValue] == 3){
        
        if (isExists) {
            
            
            if ([self.view viewWithTag:7]) {
                AvPlayer *playTest = (AvPlayer *)[self.view viewWithTag:7];
                [playTest stopPlay];
                [playTest removeFromSuperview];
            }
            
            AvPlayer *viewPlay = [[AvPlayer alloc]initWithFrame:CGRectMake(10, 748-110, 430, 100)];
            viewPlay.backgroundColor=[UIColor clearColor];
            viewPlay.tag = 7;
            [self.view addSubview:viewPlay];
            [viewPlay release];
            
            
            NSString *strURL = [documentsDirectory stringByAppendingPathComponent:[result stringForColumn:@"localURL"]];
            [viewPlay initPlayer:strURL];
            [viewPlay setlblTitle:[tempDict objectForKey:@"re_title"]];
            [viewPlay startPlay];
            
        }else{
            
            if ([self.view viewWithTag:7]) {
                AudioView *plTest=(AudioView *)[self.view viewWithTag:7];
                [plTest stopPlay];
                [plTest removeFromSuperview];
                
                
            }
            
            AudioView *viewPlay=[[AudioView alloc]initWithFrame:CGRectMake(10, 748-110, 430, 100)];
            viewPlay.backgroundColor=[UIColor clearColor];
            viewPlay.tag = 7;
            [self.view addSubview:viewPlay];
            [viewPlay release];
            
            [viewPlay setStrURL:[tempDict objectForKey:@"ar_savename"]];
            [viewPlay setlblTitle:[tempDict objectForKey:@"ar_title"]];
            [viewPlay buttonPressed:(UIButton *)[viewPlay viewWithTag:1]];
        }
        
        
    }else if([[tempDict objectForKey:@"m_id"] intValue] == 2){
        
        NSString *localPath=nil;
        int type;
        if (isExists) {
            type = 1;
            localPath = [documentsDirectory stringByAppendingPathComponent:[result stringForColumn:@"localURL"]];
            
        }else{
            type = 0;
            localPath = [tempDict objectForKey:@"ar_savename"];
        }
        
        PlayViewController *playVc = [[PlayViewController alloc] init];
        playVc.strURL = localPath;
        playVc.type = type;
        [self.navigationController pushViewController:playVc animated:YES];
        [playVc release];
        
    }else if([[tempDict objectForKey:@"m_id"] intValue] == 4){
        
        NSString *localPath=nil;
        int type;
        if (isExists) {
            type = 1;
            localPath = [documentsDirectory stringByAppendingPathComponent:[result stringForColumn:@"localURL"]];
            
        }else{
            type = 0;
            localPath = [tempDict objectForKey:@"ar_savename"];
        }
        PlayWordViewController *playWord = [[PlayWordViewController alloc]init];
        playWord.strURL =  localPath;
        playWord.type = type;
        [self.navigationController pushViewController:playWord animated:YES];
        [playWord release];
        
        
    } else{
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"暂时不支持这种格式！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    
    /*
     
     
     
     NSString *str = [tempDict objectForKey:@"ar_savename"];
     str = [str substringFromIndex:str.length-3];
     
     
     
     if (([str caseInsensitiveCompare:@"png"] == NSOrderedSame)||([str caseInsensitiveCompare:@"jpg"] == NSOrderedSame)) {
     ImageViewController *playVc = [[ImageViewController alloc] init];
     playVc.strURL = [tempDict objectForKey:@"ar_savename"];
     [self.navigationController pushViewController:playVc animated:YES];
     [playVc release];
     
     }else if(([str caseInsensitiveCompare:@"mp3"] == NSOrderedSame)){
     
     
     
     if ([self.view viewWithTag:7]) {
     AudioView *plTest=(AudioView *)[self.view viewWithTag:7];
     [plTest stopPlay];
     [plTest removeFromSuperview];
     
     
     }
     
     AudioView *viewPlay=[[AudioView alloc]initWithFrame:CGRectMake(10, 748-110, 430, 100)];
     viewPlay.backgroundColor=[UIColor clearColor];
     viewPlay.tag = 7;
     [self.view addSubview:viewPlay];
     [viewPlay release];
     
     [viewPlay setStrURL:[tempDict objectForKey:@"ar_savename"]];
     [viewPlay setlblTitle:[tempDict objectForKey:@"ar_title"]];
     [viewPlay buttonPressed:(UIButton *)[viewPlay viewWithTag:1]];
     
     }else if(([str caseInsensitiveCompare:@"mp4"] == NSOrderedSame)||([str caseInsensitiveCompare:@"mov"] == NSOrderedSame)){
     
     PlayViewController *playVc = [[PlayViewController alloc] init];
     playVc.strURL = [tempDict objectForKey:@"ar_savename"];
     [self.navigationController pushViewController:playVc animated:YES];
     [playVc release];
     
     
     
     
     }else if(([str caseInsensitiveCompare:@"doc"] == NSOrderedSame)||([str caseInsensitiveCompare:@"docx"] == NSOrderedSame)||([str caseInsensitiveCompare:@"xls"] == NSOrderedSame)||([str caseInsensitiveCompare:@"xlsx"] == NSOrderedSame)||([str caseInsensitiveCompare:@"pdf"] == NSOrderedSame)||([str caseInsensitiveCompare:@"ppt"] == NSOrderedSame)||([str caseInsensitiveCompare:@"pptx"] == NSOrderedSame)){
     
     
     PlayWordViewController *playWord = [[PlayWordViewController alloc]init];
     playWord.strURL =  [tempDict objectForKey:@"ar_savename"];
     [self.navigationController pushViewController:playWord animated:YES];
     [playWord release];
     
     }
     else{
     UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"暂时不支持这种格式！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
     [alert show];
     [alert release];
     }
     */
}
-(void)caozuoBtnAction{
    
    if (preselect == 22) {
        [self playResource:contentSelDict];
    }
    if (preselect == 21 || preselect == 23) {
        
        
        if (requestDetail) {
            [requestDetail cancel];
            requestDetail.delegate=nil;
            [requestDetail release];
            requestDetail = nil;
        }
        NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
        NSString *timeString =[ToolClass getCurretDate];
        requestDetail=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
        [requestDetail setDelegate:self];
        
        NSDictionary *tempDict = contentSelDict;
        
        NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
        
        if ([[tempDict objectForKey:@"act_type"] intValue] ==6) {
            [postDict setObject:timeString forKey:@"ts"];
            [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
            [postDict setObject:[tempDict objectForKey:@"act_id"] forKey:@"args[act_id]"];
            [postDict setObject:@"JSON" forKey:@"format"];
            [postDict setObject:@"Activity.talks" forKey:@"method"];
            [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
            
        }else{
            [postDict setObject:timeString forKey:@"ts"];
            [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
            [postDict setObject:[tempDict objectForKey:@"act_id"] forKey:@"args[act_id]"];
            [postDict setObject:@"JSON" forKey:@"format"];
            [postDict setObject:@"Activity.detail" forKey:@"method"];
            [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
            if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
                
                [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
                
            }else{
                [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
                
            }
        }
        
        
        NSString *strSign=[ToolClass getSign:postDict];
        [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
        
        
        NSLog(@"postdict is %@",postDict);
        
        for(int i=0;i<[[postDict allKeys] count];i++){
            
            [requestDetail setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
        }
        [requestDetail buildPostBody];
        [requestDetail setTimeOutSeconds:30];
        [requestDetail startAsynchronous];
        if ([[tempDict objectForKey:@"act_type"] intValue] ==6) {
            [requestDetail setDidFinishSelector:@selector(mySuccessTalk:)];
            
        }else{
            [requestDetail setDidFinishSelector:@selector(mySuccessDetail:)];
            
        }
        
        [requestDetail setDidFailSelector:@selector(myError:)];
        
        
        [postDict release];
        [strSign release];
    }
    
}
-(void)myError:(id)sender{
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"请求失败，请检查您的网络链接!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];
}
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor colorWithRed:235.0/255 green:235.0/255 blue:235.0/255 alpha:1];
    
    infoLabel.text = [hourDict objectForKey:@"cl_title"];
    infoLabel.hidden  = NO;
    infoLabel.textAlignment = NSTextAlignmentCenter;

    preselect = 20;
    arrbtns = [[NSArray alloc] initWithObjects:@"动态",@"作业",@"资源",@"活动",nil];
    
    for (int i=0;i<[arrbtns count]; i++) {
        
        UIButton *btn = [[UIButton alloc] initWithFrame:CGRectMake(72+i*75, 8+offsety, 45, 45)];
        [btn setImage:[UIImage imageNamed:[NSString stringWithFormat:@"ndt%@.png",[arrbtns objectAtIndex:i]]] forState:UIControlStateNormal];
        btn.tag = 20+i;
        [btn addTarget:self action:@selector(btnSelectActions:) forControlEvents:UIControlEventTouchDown];
        [btn setImageEdgeInsets:UIEdgeInsetsMake(-20, 0, 0, 0)];
        [self.view addSubview:btn];
        [btn release];
        
        
        UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(0, 25, 45, 20)];
        lbl.text = [arrbtns objectAtIndex:i];
        lbl.font = [UIFont boldSystemFontOfSize:14];
        lbl.textAlignment = NSTextAlignmentCenter;
        lbl.tag = 1;
        lbl.textColor = [UIColor grayColor];
        lbl.backgroundColor = [UIColor clearColor];
        [btn addSubview:lbl];
        [lbl release];
        
        
        if (i==0) {
            [btn setImage:[UIImage imageNamed:[NSString stringWithFormat:@"ndt%@1.png",[arrbtns objectAtIndex:i]]] forState:UIControlStateNormal];
            lbl.textColor =  TEXTCOLOR;
            
        }
    }
    

    
    
    UIImageView *lineview = [[UIImageView alloc] initWithFrame:CGRectMake(0, 65+offsety, 1024, 2)];
    lineview.backgroundColor = [UIColor clearColor];
    lineview.image = [UIImage imageNamed:@"横线.png"];
    [self.view addSubview:lineview];
    [lineview release];
    
    lblDownLoad = [[UILabel alloc] initWithFrame:CGRectMake(700, 16+offsety, 150, 35)];
    lblDownLoad.backgroundColor = [UIColor clearColor];
    lblDownLoad.text = @"资源下载(0/0)";
    lblDownLoad.textColor = MYCOLOR;
    [self.view addSubview:lblDownLoad];
    [lblDownLoad release];
    
    btnStart = [[UIButton alloc] initWithFrame:CGRectMake(870, 16+offsety, 132, 35)];
    [btnStart addTarget:self action:@selector(btnStartAction) forControlEvents:UIControlEventTouchDown];
    [btnStart setTitle:@"\t\t开始上课" forState:UIControlStateNormal];
    btnStart.titleLabel.font = [UIFont systemFontOfSize:14];
    [btnStart setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [btnStart setBackgroundImage:[UIImage imageNamed:@"开始上课.png"] forState:UIControlStateNormal];
    [self.view addSubview:btnStart];
    [btnStart release];
    
    
    huanjieSelect = 100;//默认第一个，全部环节开始

    
    myTable = [[UITableView alloc]initWithFrame:CGRectMake(50, 170, 890, 748-170) style:UITableViewStylePlain];
    myTable.delegate = self;
    myTable.dataSource = self;
    myTable.backgroundColor = [UIColor clearColor];
    myTable.separatorColor = [UIColor clearColor];
    [myTable setShowsVerticalScrollIndicator:NO];
    [self.view addSubview:myTable];
    [myTable release];
    
    timeLineView = [[UIView alloc] initWithFrame:CGRectMake(180, 119, 1, 630)];
    timeLineView.backgroundColor = [UIColor grayColor];
    timeLineView.alpha = 0.1;
    [self.view addSubview:timeLineView];
    [timeLineView release];
    
    
    timeLineView2 = [[UIView alloc] initWithFrame:CGRectMake(92, 119, 1, 630)];
    timeLineView2.backgroundColor = [UIColor grayColor];
    timeLineView2.alpha = 0.1;
    timeLineView2.hidden = YES;
    [self.view addSubview:timeLineView2];
    [timeLineView2 release];
    
    xialaView = [[UIImageView alloc] initWithFrame:CGRectMake(740, 55+offsety, 246, 340)];
    xialaView.image = [UIImage imageNamed:@"ndt环节展开.png"];
    xialaView.userInteractionEnabled = YES;
    xialaView.alpha = 0;
    [self.view addSubview:xialaView];
    [xialaView release];
    
    
    scroll = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 25, 246, 280)];
    [xialaView addSubview:scroll];
    [scroll setShowsVerticalScrollIndicator:NO];
    [scroll release];
    
   
    
    
    mainScrollview = [[UIScrollView alloc] initWithFrame:CGRectMake(50, 170, 1024-50, 748-170)];
    mainScrollview.backgroundColor = [UIColor clearColor];
    [mainScrollview setShowsVerticalScrollIndicator:NO];
    mainScrollview.hidden = YES;
    [self.view addSubview:mainScrollview];
    [mainScrollview release];
    
  
    /*
    tishiView = [[UIImageView alloc] initWithFrame:CGRectMake(700, 120, 314, 44)];
    tishiView.image = [UIImage imageNamed:@"提示状态.png"];
    tishiView.hidden = YES;
    tishiView.userInteractionEnabled = YES;
    [self.view addSubview:tishiView];
    [tishiView release];
     */
    
    dele=[[UIApplication sharedApplication]delegate];

    
    [self getResourceData];
    
    
   
    
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    downLoadRes = [[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [downLoadRes setDelegate:self];
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    //*//请求资源的
    
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
        
        [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
        
    }else{
        [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
        
    }
    [postDict setObject:@"JSON" forKey:@"format"];
   
        
    [postDict setObject:@"Resource.listByClasshour" forKey:@"method"];
    [postDict setObject:[hourDict objectForKey:@"cl_id"] forKey:@"args[cl_id]"];
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    
    NSLog(@"postdict is %@",postDict);
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [downLoadRes setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [downLoadRes buildPostBody];
    [downLoadRes setTimeOutSeconds:30];
    [downLoadRes startAsynchronous];
    [downLoadRes setDidFinishSelector:@selector(mySuccessdownLoadRes:)];
    [downLoadRes setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
    

    
    
    
	// Do any additional setup after loading the view.
}
-(void)mySuccessdownLoadRes:(id)sender{
    
    NSString *str=[sender responseString];
    NSMutableDictionary *muDict = [str JSONValue];
    
    
    if (muDict&&[muDict isKindOfClass:[NSArray class]]) {
       
         
        
        NSMutableArray *muArr = [muDict  mutableCopy];

        lblDownLoad.text = [NSString stringWithFormat:@"资源下载(0/%d)",[muArr count]];
        
        
        NSString *documentsDirectory = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];
        NSString *dbName =[NSString stringWithFormat:@"%@.db",@"local"];
        NSString *dbPath = [documentsDirectory stringByAppendingPathComponent:dbName];
        FMDatabase *db = [FMDatabase databaseWithPath:dbPath];
        if (![db open]) {
            NSLog(@"Could not open db.");
        }
        
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            
            for (int i=0; i<[muArr count]; i++) {
                
                NSMutableDictionary *muDict = [muArr objectAtIndex:i];
                NSLog(@"muDict is %@",muDict);

                
                FMResultSet *result = [db executeQuery:@"SELECT * FROM resour_table WHERE re_id = ?",[muDict objectForKey:@"ar_id"]];
                BOOL isExists=[result next];

                
                if (!isExists) {
                    
                    NSURL *url = [NSURL URLWithString:[muDict objectForKey:@"ar_savename"]];
                    NSData *data = [[NSData alloc] initWithContentsOfURL:url];
                    
                    NSString *strName = [NSString stringWithFormat:@"%@%d.%@",[ToolClass getCurretDate],i,[[[muDict objectForKey:@"ar_savename"] componentsSeparatedByString:@"."] lastObject]];
                    
                    NSLog(@"strName is %@",strName);
                    
                    
                    
                    NSString *filePath = [documentsDirectory stringByAppendingPathComponent:strName];
                    [data writeToFile:filePath atomically:YES];
                    [data release];
                    
                    
                    
                    
                    [db executeUpdate:@"INSERT INTO resour_table(re_id,type,re_title,localURL) VALUES (?,?,?,?)",[muDict objectForKey:@"ar_id"],[muDict objectForKey:@"m_id"],[muDict objectForKey:@"ar_title"],strName];
                    
                }
                
                
               
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    lblDownLoad.text = [NSString stringWithFormat:@"资源下载(%d/%d)",i+1,[muArr count]];
                });

            }

        });
        
       
    }

}



-(void)getHuanjieData{
    
    if (requestType) {
        [requestType cancel];
        requestType.delegate = nil;
        [requestType release];
        requestType = nil;
    }
    
    //请求环节
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    
    
    requestType=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestType setDelegate:self];
    NSString *timeString =[ToolClass getCurretDate];
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    [postDict setObject:[hourDict objectForKey:@"cl_id"] forKey:@"args[cl_id]"];
    
    
    if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
        
        [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
        
    }else{
        [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
        
    }
    //
    [postDict setObject:@"JSON" forKey:@"format"];
    [postDict setObject:@"Tache.lists" forKey:@"method"];
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    
    
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestType setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestType buildPostBody];
    [requestType setTimeOutSeconds:30];
    [requestType startAsynchronous];
    [requestType setDidFinishSelector:@selector(mySuccessType:)];
    [requestType setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
}

-(void)getResourceData{
    
    
    if (requestContent) {
        [requestContent cancel];
        requestContent.delegate=nil;
        [requestContent release];
        requestContent = nil;
    }
    
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    
    requestContent=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestContent setDelegate:self];
    
    
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    //*//请求资源的
    
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
        
        [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
        
    }else{
        [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
        
    }
    [postDict setObject:@"JSON" forKey:@"format"];
    if (preselect ==20) {
        
        [postDict setObject:@"Trend.lists" forKey:@"method"];
        [postDict setObject:@"100" forKey:@"args[page_size]"];
        
    }else if(preselect ==21){
        if (huanjieSelect != 100) {
         
            NSDictionary *dict = [huanjieArray objectAtIndex:huanjieSelect-100-1];
            [postDict setObject:[dict objectForKey:@"ta_id"] forKey:@"args[ta_id]"];
        }
        [postDict setObject:@"Activity.lists" forKey:@"method"];
        [postDict setObject:[hourDict objectForKey:@"cl_id"] forKey:@"args[cl_id]"];

        
    }else if(preselect ==22){
        
        [postDict setObject:@"Resource.listByClasshour" forKey:@"method"];
        [postDict setObject:[hourDict objectForKey:@"cl_id"] forKey:@"args[cl_id]"];


    }else if(preselect ==23){
        
        if (huanjieSelect != 100) {
            
            NSDictionary *dict = [huanjieArray objectAtIndex:huanjieSelect-100-1];
            [postDict setObject:[dict objectForKey:@"ta_id"] forKey:@"args[ta_id]"];
        }
        
        [postDict setObject:@"Activity.lists" forKey:@"method"];
        [postDict setObject:[hourDict objectForKey:@"cl_id"] forKey:@"args[cl_id]"];


    }
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    
    
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestContent setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestContent buildPostBody];
    [requestContent setTimeOutSeconds:30];
    [requestContent startAsynchronous];
    [requestContent setDidFinishSelector:@selector(mySuccessContent:)];
    [requestContent setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
    
    
}
-(void)btnChakan:(CCButton *)btn{
    
    /*
    if (contentSelect !=0) {
        UIButton *tempBtn = (UIButton *)[mainScrollview viewWithTag:contentSelect];
        tempBtn.layer.borderWidth =.0;
        tempBtn.layer.borderColor = [UIColor clearColor].CGColor;
        tempBtn.layer.cornerRadius = .0;
        [tempBtn.layer setMasksToBounds:YES];

    }
    contentSelect = btn.tag;
    
    
    btn.layer.borderWidth = 2.0;
    btn.layer.borderColor = [UIColor colorWithRed:90.0/255 green:142.0/255 blue:76.0/255 alpha:1].CGColor;
    btn.layer.cornerRadius = 5.0;
    [btn.layer setMasksToBounds:YES];

    [self caozuoBtnAction];
    */

    contentSelDict = (NSMutableDictionary *)btn.btnDict;
    [self caozuoBtnAction];

}
#pragma mark asihttp result
-(void)mySuccessContent:(id)sender{
    
    
    for (UIView *v in [mainScrollview subviews]) {
        [v removeFromSuperview];
    }
    
    NSString *str=[sender responseString];
    NSMutableDictionary *muDict = [str JSONValue];
    
    NSLog(@"muDict is %@",muDict);
    
    if (preselect == 20) {
        if (muDict&&[muDict isKindOfClass:[NSArray class]]) {
            [contentArray removeAllObjects];
            [contentArray release];
            contentArray = nil;
            
            contentArray = [muDict mutableCopy];
            
            [myTable reloadData];
        }

    }
    if (preselect == 21) {
        if ([[muDict objectForKey:@"status"] intValue]==1) {
            [contentArray removeAllObjects];
            [contentArray release];
            contentArray = nil;
            [myTable reloadData];
            
            contentArray = [[[muDict objectForKey:@"info"] objectForKey:@"list"] mutableCopy];
            
            
            int a=[contentArray count];
            int j=0;
            for (int i=0; i<a ; i++) {
                NSDictionary *dict=[contentArray objectAtIndex:j];
                if (![[dict objectForKey:@"act_type"] isEqualToString:@"1"]) {
                    [contentArray removeObject:dict];
                }else{
                    j++;
                }
            }
            [self loadScrollView];

            
            
        }
    }
    if (preselect == 22) {
        if (muDict&&[muDict isKindOfClass:[NSArray class]]) {
            [contentArray removeAllObjects];
            [contentArray release];
            contentArray = nil;
            [myTable reloadData];
            
            contentArray = [muDict  mutableCopy];
            [self loadScrollView];
        }
            
        
    }else if(preselect == 23){
    
        if ([[muDict objectForKey:@"status"] intValue]==1) {
            [contentArray removeAllObjects];
            [contentArray release];
            contentArray = nil;
            [myTable reloadData];
            
            contentArray = [[[muDict objectForKey:@"info"] objectForKey:@"list"] mutableCopy];
            [self loadScrollView];
        }
    }
    
    
}
-(void)mySuccessType:(id)sender{
    
    NSString *str=[sender responseString];
    NSMutableDictionary *muDict = [str JSONValue];
    if ([[muDict objectForKey:@"status"] intValue]==1) {
        
        if (huanjieArray) {
            [huanjieArray removeAllObjects];
            [huanjieArray release];
            huanjieArray = nil;
        }
        huanjieArray = [[[muDict objectForKey:@"info"] objectForKey:@"list"] mutableCopy];
        NSLog(@"huanjieArray is %@",huanjieArray);

       [self getResourceData];

        
    }

   
    
}

-(void)btnStartAction{
    
    StartViewController *startVc = [[StartViewController alloc] init];
    startVc.courseDict = courseDict;
    startVc.hourDict = hourDict;
    [self.navigationController pushViewController:startVc animated:YES];
    [startVc release];
}
-(void)btnSelectActions:(UIButton *)btn{
    
    
    if (btn.tag != preselect) {
        

        
        UIButton *preBtn = (UIButton *)[self.view viewWithTag:preselect];
        [preBtn setImage:[UIImage imageNamed:[NSString stringWithFormat:@"ndt%@.png",[arrbtns objectAtIndex:preselect-20]]] forState:UIControlStateNormal];
        UILabel *preLbl = (UILabel *)[preBtn viewWithTag:1];
        preLbl.textColor = [UIColor grayColor];
        
        [btn setImage:[UIImage imageNamed:[NSString stringWithFormat:@"ndt%@1.png",[arrbtns objectAtIndex:btn.tag-20]]] forState:UIControlStateNormal];
        UILabel *lbl = (UILabel *)[btn viewWithTag:1];
        lbl.textColor =  TEXTCOLOR;
        
        
        
        
        preselect = btn.tag;
        
        if (preselect == 20 || preselect == 22) {
            timeLineView2.hidden = YES;
            
            
            [self getResourceData];
        }else{
            
            timeLineView2.hidden = NO;
            
            
            [self getHuanjieData];
        }
        
        if (preselect == 20) {
            mainScrollview.hidden = YES;
            myTable.hidden = NO;
            timeLineView.hidden = NO;
            tishiView.hidden = YES;
            
        }else{
            
            
            
            myTable.hidden = YES;
            mainScrollview.hidden = NO;
            timeLineView.hidden = YES;
            tishiView.hidden = NO;
            
       
        }
    }
}
-(void)selectHuanjieAction{
    
    if (flag == NO) {
        
        [UIView animateWithDuration:0.3 animations:^(void){
            xialaView.alpha = 1;
            [self.view bringSubviewToFront:xialaView];
        
        }];
        
        
        

        flag = YES;
    }else{
        
        [UIView animateWithDuration:0.3 animations:^(void){
            xialaView.alpha = 0;
            
            
        }];

        

        flag = NO;
    }
}

#pragma mark 发布作业代理
-(void)fabuHomeWork:(NSString *)strTime{
    
    if (requestDetail) {
        [requestDetail cancel];
        requestDetail.delegate=nil;
        [requestDetail release];
        requestDetail = nil;
    }
    NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
    NSString *timeString =[ToolClass getCurretDate];
    requestDetail=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
    [requestDetail setDelegate:self];
    
    NSDictionary *tempDict = contentSelDict;
    
    NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
    [postDict setObject:timeString forKey:@"ts"];
    [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
    [postDict setObject:[tempDict objectForKey:@"act_id"] forKey:@"args[act_id]"];
    [postDict setObject:@"JSON" forKey:@"format"];
    
    if ([[tempDict objectForKey:@"act_type"] intValue] == 1) {
        [postDict setObject:@"Homework.publish" forKey:@"method"];
        
    }
    [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
    if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {
        
        [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
        
    }else{
        [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];
    }
    [postDict setObject:strTime forKey:@"args[complete_time]"];
    
    NSString *strSign=[ToolClass getSign:postDict];
    [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
    
    NSLog(@"postdict is %@",postDict);
    
    for(int i=0;i<[[postDict allKeys] count];i++){
        
        [requestDetail setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
    }
    [requestDetail buildPostBody];
    [requestDetail setTimeOutSeconds:30];
    [requestDetail startAsynchronous];
    [requestDetail setDidFinishSelector:@selector(mySuccessState:)];
    [requestDetail setDidFailSelector:@selector(myError:)];
    
    
    [postDict release];
    [strSign release];
}

#pragma mark alertdelegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    
    NSLog(@"buttonIndex is %d",buttonIndex);
   
}
-(void)mySuccessState:(id)sender{
    
    NSString *str = [sender responseString];
    NSMutableDictionary *dict = [str JSONValue];
    
    NSLog(@"dict is %@",dict);
    if (dict) {
        
        if ([[dict objectForKey:@"status"] intValue] ==0) {
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:[dict objectForKey:@"message"] delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
            [alert release];
        }else{
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"发布成功!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
            [alert release];
            
            NSDictionary *tempDict = contentSelDict;
            
            if ([[tempDict objectForKey:@"act_type"] intValue] == 1) {
                [fabu removeFromSuperview];
            }
        }
        
    }

}



#pragma mark
#pragma mark 批改作业
-(void)btnCheck:(CCButton *)btn{
    
    NSLog(@"btn.dict is %@",btn.btnDict);
    
    if (btn.tag == 100) {
        CCButton *superBtn = (CCButton *)[btn superview];
        [self btnChakan:superBtn];
        
    }else if(btn.tag == 101){
        contentSelDict = (NSMutableDictionary *)btn.btnDict;
        NSDictionary *tempDict = contentSelDict;
//        if ([[tempDict objectForKey:@"act_type"] intValue] != 1 && [[tempDict objectForKey:@"act_type"] intValue] != 2) {
//            return;
//        }
        
        if ([[tempDict objectForKey:@"act_type"] intValue] == 1) {
            //发布作业
            
            fabu=[[FabuHomework alloc]initWithFrame:CGRectMake(0, 0, 1024, 748)];
            fabu.workDele = self;
            [self.view addSubview:fabu];
            [fabu release];
            
            
        }else{
            if (requestDetail) {
                [requestDetail cancel];
                requestDetail.delegate=nil;
                [requestDetail release];
                requestDetail = nil;
            }
            NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
            NSString *timeString =[ToolClass getCurretDate];
            requestDetail=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
            [requestDetail setDelegate:self];
            
            NSDictionary *tempDict = contentSelDict;
            
            NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
            [postDict setObject:timeString forKey:@"ts"];
            [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
            [postDict setObject:[tempDict objectForKey:@"act_id"] forKey:@"args[act_id]"];
            [postDict setObject:@"JSON" forKey:@"format"];
            if ([[tempDict objectForKey:@"act_type"] intValue] == 2) {
                
                [postDict setObject:@"30" forKey:@"args[complete_time]"];
                [postDict setObject:@"Classwork.publish" forKey:@"method"];
                
            }else{
                
                [postDict setObject:[tempDict objectForKey:@"act_type"] forKey:@"args[act_type]"];
                [postDict setObject:@"Activity.publish" forKey:@"method"];
                
            }
            [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
            if ([[courseDict objectForKey:@"c_id"] intValue] == 0) {

                [postDict setObject:[courseDict objectForKey:@"cro_id"] forKey:@"args[cro_id]"];
                
            }else{
                [postDict setObject:[courseDict objectForKey:@"c_id"] forKey:@"args[c_id]"];

            }
            
            NSString *strSign=[ToolClass getSign:postDict];
            [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
            
            NSLog(@"postdict is %@",postDict);
            
            for(int i=0;i<[[postDict allKeys] count];i++){
                
                [requestDetail setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
            }
            [requestDetail buildPostBody];
            [requestDetail setTimeOutSeconds:30];
            [requestDetail startAsynchronous];
            [requestDetail setDidFinishSelector:@selector(mySuccessState:)];
            [requestDetail setDidFailSelector:@selector(myError:)];
            
            
            [postDict release];
            [strSign release];
        }
        
       
    }else{
        
        StuentDoHomeWork *doHomeWork = [[StuentDoHomeWork alloc] init];
        doHomeWork.actDict = (NSMutableDictionary *)btn.btnDict;
        doHomeWork.courseDict = courseDict;
        [self.navigationController pushViewController:doHomeWork animated:YES];
        [doHomeWork release];
    }
    
    
}
-(void)loadScrollView{
    
    if (preselect == 22) {
        for (int i= 0; i<[contentArray count]; i++) {
            
            NSMutableDictionary *dict =[ contentArray objectAtIndex:i];
            
            CCButton *btn = [[CCButton alloc] initWithFrame:CGRectMake(i%4*(208+15), i/4*(142+15), 208, 142)];
            btn.btnDict = dict;
            [btn addTarget:self action:@selector(btnChakan:) forControlEvents:UIControlEventTouchUpInside];
            [mainScrollview addSubview:btn];
            [btn release];
            
            //185 90
            ImgDownSelf *img = [[ImgDownSelf alloc] initWithFrame:CGRectMake(208/2-50, 20, 100, 75)];
            img.userInteractionEnabled = NO;
            [img setImgUrl:[dict objectForKey:@"ar_image"]];
            [btn addSubview:img];
            [img release];
            
            
            
            img.layer.borderColor = [UIColor lightGrayColor].CGColor;
            img.layer.borderWidth = 1.0;
            img.layer.masksToBounds = YES;
            
            
            NSString *saveName = [dict objectForKey:@"ar_savename"];
            NSArray *arr = [saveName componentsSeparatedByString:@"."];
            
            UILabel *lbl = [[UILabel alloc] initWithFrame:CGRectMake(10, 90, 185, 50)];
            lbl.backgroundColor = [UIColor clearColor];
            lbl.textColor = TEXTCOLOR;
            lbl.font = [UIFont boldSystemFontOfSize:15];
            lbl.numberOfLines = 2;
            lbl.textAlignment = NSTextAlignmentCenter;
            lbl.text = [NSString stringWithFormat:@"%@.%@",[dict objectForKey:@"ar_title"],[arr lastObject]];
            [btn addSubview:lbl];
            [lbl release];
            
            /*
            if ([[dict objectForKey:@"act_is_published"] intValue] ==1) {
                
                [btn setBackgroundImage:[UIImage imageNamed:@"已发布.png"] forState:UIControlStateNormal];
                [btn setBackgroundImage:[UIImage imageNamed:@"已发布.png"] forState:UIControlStateHighlighted];
                lbl.textColor = [UIColor whiteColor];
                
            }else{
                [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateNormal];
                [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateHighlighted];
                lbl.textColor = TEXTCOLOR;
                
            }*/
            [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateNormal];
            [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateHighlighted];
            lbl.textColor = TEXTCOLOR;

        }
        
        [mainScrollview setContentSize:CGSizeMake(1024-50, ([contentArray count]/4+1)*(142+15))];

        
    }
    if (preselect == 21) {
        
            for (int i= 0; i<[huanjieArray count]; i++) {
                NSMutableDictionary *dict2 = [huanjieArray objectAtIndex:i];
                
                [dict2 removeObjectForKey:@"appArray"];
                
                
                NSString *strId = [dict2 objectForKey:@"ta_id"];
                NSMutableArray *appArray = [[NSMutableArray alloc] init];
                
                for (int i=0; i<[contentArray count]; i++) {
                    
                    NSMutableDictionary *dict =[ contentArray objectAtIndex:i];
                    
                    if ([[dict objectForKey:@"ta_id"] isEqualToString:strId]) {
                        [appArray addObject:dict];
                        
                    }
                }
                [dict2 setObject:appArray forKey:@"appArray"];
                [appArray release];
                
            }

        
            float height = 0;
            for (int i= 0; i<[huanjieArray count]; i++) {
                
                
                NSMutableDictionary *dict3 = [huanjieArray objectAtIndex:i];
                NSMutableArray *array = (NSMutableArray *)[dict3 objectForKey:@"appArray"];

                
                UIView *tempview = [[UIView alloc] initWithFrame:CGRectZero];
                tempview.tag = i+1000;
                tempview.backgroundColor = [UIColor clearColor];
                [mainScrollview addSubview:tempview];
                [tempview release];
                
                
                
                if ([array count] != 0) {
                    
                    for (int a= 0; a <[array count]; a++) {
                    
                        NSMutableDictionary *dict =[array objectAtIndex:a];
                        
                        CCButton *btn = [[CCButton alloc] initWithFrame:CGRectMake(a%4*(208+15)+90, a/4*(142+15)+100, 208, 142)];
                        btn.btnDict = dict;
                        [btn addTarget:self action:@selector(btnChakan:) forControlEvents:UIControlEventTouchUpInside];
                        [tempview addSubview:btn];
                        [btn release];
                        
                        
                        
                        
//                        UILongPressGestureRecognizer *longPressBtn= [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(pressedLongBtn:)];
//                        [btn addGestureRecognizer:longPressBtn];
//                        [longPressBtn release];
                        
                        
                        UILabel *lbl = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 185, 30)];
                        lbl.backgroundColor = [UIColor clearColor];
                        lbl.textColor = MYCOLOR;
                        lbl.font = [UIFont boldSystemFontOfSize:20];
                        lbl.textAlignment = NSTextAlignmentLeft;
                        lbl.text = [dict objectForKey:@"act_title"];
                        [btn addSubview:lbl];
                        [lbl release];
                        
                        
                        UILabel *lbl2 = [[UILabel alloc] initWithFrame:CGRectMake(10, 40, 185, 30)];
                        lbl2.backgroundColor = [UIColor clearColor];
                        lbl2.textColor = [UIColor grayColor];
                        lbl2.font = [UIFont boldSystemFontOfSize:18];
                        lbl2.textAlignment = NSTextAlignmentLeft;
                        if ([[dict objectForKey:@"act_is_published"] intValue] ==1)
                        {
                            lbl2.text = @"状态:已发布";
                        }
                        else{
                            lbl2.text = @"状态:未发布";
                        }
                        [btn addSubview:lbl2];
                        [lbl2 release];
                        
                        UIView *lineView = [[UIView alloc]initWithFrame:CGRectMake(5, 90, 195, 1)];
                        lineView.backgroundColor = [UIColor lightGrayColor];
                        lineView.alpha = 0.3;
                        [btn addSubview:lineView];
                        [lineView release];
                        
                        for (int i =0; i<3; i++) {
                            
                            CCButton *btnCheck = [[CCButton alloc]initWithFrame:CGRectMake(80+i*40, 100, 40, 40)];
                            btnCheck.btnDict = dict;
                            btnCheck.tag = i+100;
                            [btnCheck setImageEdgeInsets:UIEdgeInsetsMake(0, 0, 18, 0)];
                            [btnCheck setTitleEdgeInsets:UIEdgeInsetsMake(22, -22, 0, 0)];
                            btnCheck.titleLabel.font = [UIFont systemFontOfSize:12];
                            [btnCheck setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
                            switch (i) {
                                case 0:
                                    [btnCheck setTitle:@"预览" forState:UIControlStateNormal];
                                    [btnCheck setImage:[UIImage imageNamed:@"zz预览.png"] forState:UIControlStateNormal];
                                    break;
                                case 1:
                                    if ([[dict objectForKey:@"act_is_published"] intValue] ==1){
                                        [btnCheck setTitle:@"已发布" forState:UIControlStateNormal];

                                    }else{
                                        [btnCheck setTitle:@"发布" forState:UIControlStateNormal];

                                    }

                                    [btnCheck setImage:[UIImage imageNamed:@"zz发布.png"] forState:UIControlStateNormal];
                                    break;
                                case 2:
                                    [btnCheck setTitle:@"批阅" forState:UIControlStateNormal];

                                    [btnCheck setImage:[UIImage imageNamed:@"zz批阅.png"] forState:UIControlStateNormal];
                                    break;
                                default:
                                    break;
                            }
                            btnCheck.backgroundColor = [UIColor clearColor];
                            [btnCheck addTarget:self action:@selector(btnCheck:) forControlEvents:UIControlEventTouchUpInside];
                            [btn addSubview:btnCheck];
                            [btnCheck release];
                        }
                        
                        
                        /*
                        UILabel *lbl3 = [[UILabel alloc] initWithFrame:CGRectMake(10, 110, 30, 30)];
                        lbl3.backgroundColor = [UIColor clearColor];
                        
                        lbl3.font = [UIFont boldSystemFontOfSize:18];
                        lbl3.textAlignment = NSTextAlignmentLeft;
                        lbl3.text =[NSString stringWithFormat:@"%d",i+1];
                        [btn addSubview:lbl3];
                        [lbl3 release];
                        
                        
                        UILabel *lbl4 = [[UILabel alloc] initWithFrame:CGRectMake(100, 110, 90, 30)];
                        lbl4.backgroundColor = [UIColor clearColor];
                        
                        lbl4.font = [UIFont boldSystemFontOfSize:18];
                        lbl4.textAlignment = NSTextAlignmentLeft;
                        [btn addSubview:lbl4];
                        [lbl4 release];
                        */
                        
                        /*
                        if ([[dict objectForKey:@"act_is_published"] intValue] ==1) {
                            
                            [btn setBackgroundImage:[UIImage imageNamed:@"已发布.png"] forState:UIControlStateNormal];
                            [btn setBackgroundImage:[UIImage imageNamed:@"已发布.png"] forState:UIControlStateHighlighted];
                            
                            lbl.textColor = [UIColor whiteColor];
                            lbl2.textColor = [UIColor whiteColor];
                            lbl3.textColor = [UIColor whiteColor];
                            lbl4.textColor = [UIColor whiteColor];
                        }else{
                            [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateNormal];
                            [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateHighlighted];
                            
                            lbl.textColor = TEXTCOLOR;
                            lbl2.textColor = TEXTCOLOR;
                            lbl3.textColor = TEXTCOLOR;
                            lbl4.textColor = TEXTCOLOR;
                        }
                         */
                        [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateNormal];
                        [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateHighlighted];
                        
                                             
                    
                    }
                    
                    
                    int count = 0;
                    if ([array count]<=4) {
                        count = 1;
                    }else{
                        if ([array count]%4 ==0) {
                            count = [array count]/4;
                        }else{
                            count = [array count]/4 + 1;
                        }
                    }
                    tempview.frame = CGRectMake(0, height, mainScrollview.frame.size.width, count*(142+15)+100);

                    height += (count*(142+15)+100);
                    
                    
                    
                    
                    UIImageView *backHuanjie = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 84, 84)];
                    backHuanjie.image = [UIImage imageNamed:@"环节bj.png"];
                    [tempview addSubview:backHuanjie];
                    [backHuanjie release];
                    
                    UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 84, 84)];
                    lbl.text = [dict3 objectForKey:@"ta_title"];
                    lbl.numberOfLines = 0;
                    lbl.textColor = TEXTCOLOR;
                    lbl.backgroundColor = [UIColor clearColor];
                    lbl.textAlignment = NSTextAlignmentCenter;
                    [backHuanjie addSubview:lbl];
                    [lbl release];
                    
                    UIImageView *fengedian = [[UIImageView alloc] initWithFrame:CGRectMake(35, 97, 14, 14)];
                    fengedian.image = [UIImage imageNamed:@"分割点.png"];
                    [tempview addSubview:fengedian];
                    [fengedian release];
                    
                }
                
                
                [mainScrollview setContentSize:CGSizeMake(1024-50, height)];

            }
        

    }
    if (preselect == 23) {
        
        
        for (int i= 0; i<[huanjieArray count]; i++) {
            
            NSMutableDictionary *dict2 = [huanjieArray objectAtIndex:i];
            [dict2 removeObjectForKey:@"appArray"];
            
            NSString *strId = [dict2 objectForKey:@"ta_id"];
            NSMutableArray *appArray = [[NSMutableArray alloc] init];
            
            for (int i=0; i<[contentArray count]; i++) {
                
                NSMutableDictionary *dict =[ contentArray objectAtIndex:i];

                if ([[dict objectForKey:@"ta_id"] isEqualToString:strId]) {
                    [appArray addObject:dict];
                    
                }
            }
            [dict2 setObject:appArray forKey:@"appArray"];
            [appArray release];
            
        }

        
        float height = 0;
        for (int i= 0; i<[huanjieArray count]; i++) {
            
            
            NSMutableDictionary *dict2 = [huanjieArray objectAtIndex:i];
            NSMutableArray *array = (NSMutableArray *)[dict2 objectForKey:@"appArray"];
            
            UIView *tempview = [[UIView alloc] initWithFrame:CGRectZero];
            tempview.tag = i+1000;
            tempview.backgroundColor = [UIColor clearColor];
            [mainScrollview addSubview:tempview];
            [tempview release];
            
            
           
            
            if ([array count] != 0) {
                
                for (int a= 0; a <[array count]; a++) {
                    
                    NSMutableDictionary *dict =[array objectAtIndex:a];
                    
                    CCButton *btn = [[CCButton alloc] initWithFrame:CGRectMake(a%4*(208+15)+90, a/4*(142+15)+100, 208, 142)];
                    btn.btnDict = dict;
                    [btn addTarget:self action:@selector(btnChakan:) forControlEvents:UIControlEventTouchUpInside];
                    [tempview addSubview:btn];
                    [btn release];
                    
                    
//                    UILongPressGestureRecognizer *longPressBtn= [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(pressedLongBtn:)];
//                    [btn addGestureRecognizer:longPressBtn];
//                    [longPressBtn release];
//                    
//                    ImgDownSelf *img = [[ImgDownSelf alloc] initWithFrame:CGRectMake(10, 10, 185, 90)];
//                    img.userInteractionEnabled = NO;
//                    img.image = [UIImage imageNamed:@"backIcon.png"];
//                    [btn addSubview:img];
//                    [img release];
//                    
                    
                    //1（作业）或2（练习）
                    //活动类型为3（文本）
                    //活动类型为4（链接）
                    //活动类型为5（拓展阅读）
                    
                    UIImageView *iconImg = [[UIImageView alloc] initWithFrame:CGRectMake(10, 10, 185, 42)];
                    iconImg.contentMode = UIViewContentModeScaleAspectFit;
                    [btn  addSubview:iconImg];
                    [iconImg release];
                    switch ([[dict objectForKey:@"act_type"] intValue]) {
                        case 1:
                           // iconImg.frame = CGRectMake(185.0/2-152/2, 90/2-42/2, 152, 42);
                            iconImg.image = [UIImage imageNamed:@"作业icon.png"];
                            break;
                        case 2:
                         //   iconImg.frame = CGRectMake(185.0/2-152/2, 90/2-42/2, 152, 42);
                            iconImg.image = [UIImage imageNamed:@"练习icon.png"];
                            break;
                        case 3:
                           // iconImg.frame = CGRectMake(185.0/2-88/2, 90/2-88/2, 88, 88);
                            iconImg.image = [UIImage imageNamed:@"文本icon.png"];
                            break;
                        case 4:
                           // iconImg.frame = CGRectMake(185.0/2-152/2, 90/2-42/2, 152, 42);
                            iconImg.image = [UIImage imageNamed:@"链接icon.png"];
                            break;
                        case 5:
                          //  iconImg.frame = CGRectMake(185.0/2-152/2, 90/2-42/2, 152, 42);
                            iconImg.image = [UIImage imageNamed:@"拓展阅读icon.png"];
                            break;
                        case 6:
                            //  iconImg.frame = CGRectMake(185.0/2-152/2, 90/2-42/2, 152, 42);
                            iconImg.image = [UIImage imageNamed:@"讨论.png"];
                            break;
                        default:
                            break;
                    }
                    
                    
                    UILabel *lbl = [[UILabel alloc] initWithFrame:CGRectMake(10, 52, 185, 30)];
                    lbl.backgroundColor = [UIColor clearColor];
                    lbl.font = [UIFont boldSystemFontOfSize:20];
                    lbl.textAlignment = NSTextAlignmentLeft;
                    lbl.text = [dict objectForKey:@"act_title"];
                    [btn addSubview:lbl];
                    [lbl release];
                    
                    
                    UIView *lineView = [[UIView alloc]initWithFrame:CGRectMake(5, 90, 195, 1)];
                    lineView.backgroundColor = [UIColor lightGrayColor];
                    lineView.alpha = 0.3;
                    [btn addSubview:lineView];
                    [lineView release];
                    
                    for (int i =0; i<3; i++) {
                        CCButton *btnCheck = nil;
                        if ([[dict objectForKey:@"act_type"] intValue]==1) {
                            btnCheck = [[CCButton alloc]initWithFrame:CGRectMake(80+i*40, 100, 40, 40)];

                        }else{
                            btnCheck = [[CCButton alloc]initWithFrame:CGRectMake(80+i*40+40, 100, 40, 40)];
                            if (i==2) {
                                btnCheck.hidden = YES;
                            }
                        }
                        btnCheck.btnDict = dict;
                        btnCheck.tag = i+100;
                        [btnCheck setImageEdgeInsets:UIEdgeInsetsMake(0, 0, 18, 0)];
                        [btnCheck setTitleEdgeInsets:UIEdgeInsetsMake(22, -22, 0, 0)];
                        btnCheck.titleLabel.font = [UIFont systemFontOfSize:12];
                        [btnCheck setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
                        switch (i) {
                            case 0:
                                [btnCheck setTitle:@"预览" forState:UIControlStateNormal];
                                [btnCheck setImage:[UIImage imageNamed:@"zz预览.png"] forState:UIControlStateNormal];
                                break;
                            case 1:
                                if ([[dict objectForKey:@"act_is_published"] intValue] ==1){
                                    [btnCheck setTitle:@"已发布" forState:UIControlStateNormal];
                                    
                                }else{
                                    [btnCheck setTitle:@"发布" forState:UIControlStateNormal];
                                    
                                }
                                [btnCheck setImage:[UIImage imageNamed:@"zz发布.png"] forState:UIControlStateNormal];
                                break;
                            case 2:
                                [btnCheck setTitle:@"批阅" forState:UIControlStateNormal];
                                
                                [btnCheck setImage:[UIImage imageNamed:@"zz批阅.png"] forState:UIControlStateNormal];
                                break;
                            default:
                                break;
                        }
                        btnCheck.backgroundColor = [UIColor clearColor];
                        [btnCheck addTarget:self action:@selector(btnCheck:) forControlEvents:UIControlEventTouchUpInside];
                        [btn addSubview:btnCheck];
                        [btnCheck release];
                    }
                    /*
                    if ([[dict objectForKey:@"act_is_published"] intValue] ==1) {
                        
                        [btn setBackgroundImage:[UIImage imageNamed:@"已发布.png"] forState:UIControlStateNormal];
                        [btn setBackgroundImage:[UIImage imageNamed:@"已发布.png"] forState:UIControlStateHighlighted];
                        lbl.textColor = [UIColor whiteColor];
                        
                    }else{
                        [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateNormal];
                        [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateHighlighted];
                        lbl.textColor = TEXTCOLOR;
                        
                    }*/
                    [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateNormal];
                    [btn setBackgroundImage:[UIImage imageNamed:@"未发布.png"] forState:UIControlStateHighlighted];
                    lbl.textColor = TEXTCOLOR;
                }
                

                int count = 0;
                if ([array count]<=4) {
                    count = 1;
                }else{
                    if ([array count]%4 ==0) {
                        count = [array count]/4;
                    }else{
                        count = [array count]/4 + 1;
                    }
                }
                tempview.frame = CGRectMake(0, height, mainScrollview.frame.size.width, count*(142+15)+100);

                height += (count*(142+15)+100);
                
                
                
                
                UIImageView *backHuanjie = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 84, 84)];
                backHuanjie.image = [UIImage imageNamed:@"环节bj.png"];
                [tempview addSubview:backHuanjie];
                [backHuanjie release];
                
                UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 84, 84)];
                lbl.text = [dict2 objectForKey:@"ta_title"];
                lbl.numberOfLines = 0;
                lbl.textColor = TEXTCOLOR;
                lbl.backgroundColor = [UIColor clearColor];
                lbl.textAlignment = NSTextAlignmentCenter;
                [backHuanjie addSubview:lbl];
                [lbl release];
                
                UIImageView *fengedian = [[UIImageView alloc] initWithFrame:CGRectMake(35, 97, 14, 14)];
                fengedian.image = [UIImage imageNamed:@"分割点.png"];
                [tempview addSubview:fengedian];
                [fengedian release];
                
            }
            
            [mainScrollview setContentSize:CGSizeMake(1024-50, height)];
          
        }
    }
    
    //

}

#pragma mark uitableDelegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    
    
    return [contentArray count];
    
    
    
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    

    
    return 100;
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *strcell = @"cell";
    
    DongtaiCell *cell = [tableView dequeueReusableCellWithIdentifier:strcell];
    if (cell == nil) {
        cell = [[DongtaiCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strcell];
    }
    NSMutableDictionary *muDict = [contentArray objectAtIndex:indexPath.row];
    [cell changeUI:muDict];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
        
}

#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_6_0

-(NSUInteger)supportedInterfaceOrientations
{
    return UIInterfaceOrientationMaskLandscape;
}

- (BOOL)shouldAutorotate {
    return YES;
}

#endif


// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationLandscapeLeft  ||
            interfaceOrientation == UIInterfaceOrientationLandscapeRight);
    
}
-(void)dealloc{
    
    [downLoadRes cancel];
    downLoadRes.delegate = nil;
    [downLoadRes release];
    
    [requestDetail cancel];
    requestDetail.delegate = nil;
    [requestDetail release];
    
    [requestType cancel];
    requestType.delegate = nil;
    [requestType release];
    
    [requestContent cancel];
    requestContent.delegate = nil;
    [requestContent release];
    
   
    
    [hourDict release];
    [courseDict release];
    [huanjieArray release];
    [contentArray release];
    
    [arrbtns release];
    
    
    [super dealloc];
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end

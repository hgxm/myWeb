//
//  ZhezhaoView.m
//  ClassRoomTeacher
//
//  Created by apple  on 13-7-4.
//  Copyright (c) 2013年 apple . All rights reserved.
//

#import "ZhezhaoView.h"

@implementation ZhezhaoView
@synthesize pretopselect;
@synthesize delegate;
- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        pretopselect = 10;
        

        
        blackView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 1024, 748)];
        blackView.backgroundColor = [UIColor blackColor];
        blackView.userInteractionEnabled = YES;
        blackView.alpha = .3;
        [self addSubview:blackView];
        [blackView release];
        
        borderImageView = [[UIView alloc] initWithFrame:CGRectMake(1024/2-770/2, 60, 770, 670)];
        borderImageView.backgroundColor = [UIColor whiteColor];
        borderImageView.layer.borderWidth = 2.0;
        borderImageView.layer.cornerRadius = 8.0;
        borderImageView.layer.borderColor = [UIColor colorWithRed:109.0/255 green:173.0/255 blue:91.0/255 alpha:1].CGColor;
        borderImageView.layer.masksToBounds = YES;
        [self addSubview:borderImageView];
        [borderImageView release];
        
        
        myTable = [[UITableView alloc] initWithFrame:CGRectMake(70, 60, 660, 588)];
        myTable.delegate = self;
        myTable.backgroundColor = [UIColor clearColor];
        myTable.separatorColor = [UIColor clearColor];
        myTable.dataSource = self;
        [myTable setShowsVerticalScrollIndicator:NO];
        [borderImageView addSubview:myTable];
        [myTable release]; 
        
    }
    return self;
}
-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
    UITouch *touch = [touches anyObject];
    if ([touch view]==blackView) {
        [self removeFromSuperview];
    }
}
-(void)changeContent:(NSMutableArray *)tempArr{
    
    if (![tempArr isEqual:[NSNull null]]) {
        dataMuArr = [tempArr mutableCopy];

    }else{
        dataMuArr = [[NSMutableArray alloc] init];
    }

    if (pretopselect == 10) {
        [NSThread detachNewThreadSelector:@selector(loadImage:) toTarget:self withObject:dataMuArr];
    }
    if (pretopselect == 15 || pretopselect ==16) {
        
        [myTable reloadData];
    }
    

}
-(void)addNoteView:(NSMutableDictionary *)tempArr{
    
    dataMuArr = [[NSMutableArray alloc]init];
    [dataMuArr addObject:tempArr];
    
    [NSThread detachNewThreadSelector:@selector(loadImage:) toTarget:self withObject:dataMuArr];

   
}


-(void)loadImage:(NSMutableArray *)tempArr{
    
    
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc]init];
    
    
    
    for (int i=0; i<[tempArr count]; i++) {
        
        NSMutableDictionary *dict = [tempArr objectAtIndex:i];
        NSString *strImgURL;
        if (pretopselect == 11) {
           strImgURL=[dict objectForKey:@"act_note"];

        }else{
            strImgURL=[dict objectForKey:@"path"];
        }
        
        NSString *strFile=[FileManageUnit getFile:strImgURL];
        
        if([FileManageUnit fileIsExist:strFile]==NO){
            
            NSData *imgData = [[[NSData alloc] initWithContentsOfURL:[NSURL URLWithString:strImgURL]] autorelease];
            
            UIImage *image=[[UIImage alloc]initWithData:imgData];
            if(image){
                [dict setObject:image forKey:@"image"];
                [image release];
            }
            if (strFile) {
                [imgData writeToFile:strFile atomically:YES];
                
            }
            
        }else{
            NSData *imgData = [[[NSData alloc] initWithContentsOfFile:strFile] autorelease];
            
            UIImage *image=[[UIImage alloc]initWithData:imgData];
            if(image){
                [dict setObject:image forKey:@"image"];
                [image release];
            }
        }
        
    }
    
    [self performSelectorOnMainThread:@selector(flushTable) withObject:nil waitUntilDone:NO];
    
    
    [pool drain];
}


-(void)flushTable{
    
    [myTable reloadData];
    
    
}



- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    
    
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    
    
    
    return [dataMuArr count] ;
    
    
    
}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    
    return nil;
}



- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    
    return 0;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (pretopselect == 10) {
        
        NSDictionary *dict=[dataMuArr objectAtIndex:indexPath.row];
        
        UIImage *myImage=[dict objectForKey:@"image"];
        float height=0;
        
        if (myImage) {
            
            height+=myImage.size.height;
            
        }
        height += 130;
        
        return height;
    }
    
    if (pretopselect == 11) {

        NSDictionary *dict=[dataMuArr objectAtIndex:indexPath.row];
        
        UIImage *myImage=[dict objectForKey:@"image"];
        float height=0;
        
        if (myImage) {
            
            height+=myImage.size.height;
            
        }
        height += 10;
        
        return height;
    }
    
    
    
    if (pretopselect == 15) {//链接
        return 80;
    }
    if (pretopselect == 16) {
        return 135;
    }
   
    return 80;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    /*
     LiuyanCell *cell = [tableView dequeueReusableCellWithIdentifier:strCell];
     if (cell == nil) {
     cell = [[LiuyanCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strCell];
     
     }
     cell.selectionStyle = UITableViewCellSelectionStyleNone;
     return cell;
     
     
     BianlunCell *cell = [tableView dequeueReusableCellWithIdentifier:strCell];
     if (cell == nil) {
     cell = [[BianlunCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strCell];
     
     }
     cell.selectionStyle = UITableViewCellSelectionStyleNone;
     return cell;
     
     
     */
    NSString *strCell = [NSString stringWithFormat:@"cell%d",pretopselect];
    if (pretopselect == 10) {
        NSMutableDictionary *muDict = [dataMuArr objectAtIndex:indexPath.row];
        
        HomeWorkCell *cell = [tableView dequeueReusableCellWithIdentifier:strCell];
        if (cell == nil) {
            cell = [[HomeWorkCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strCell];
            
        }
        [cell updateCell:muDict index:indexPath.row];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
        
    }else if(pretopselect == 11){
        NSMutableDictionary *muDict = [dataMuArr objectAtIndex:indexPath.row];

        ActNoteCell *cell = [tableView dequeueReusableCellWithIdentifier:strCell];
        if (cell == nil) {
            cell = [[ActNoteCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strCell];
            
        }
        [cell updateCell:muDict];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        
        return cell;
    }else if(pretopselect == 15){
        NSMutableDictionary *muDict = [dataMuArr objectAtIndex:indexPath.row];
        LianjieCell *cell = [tableView dequeueReusableCellWithIdentifier:strCell];
        if (cell == nil) {
            cell = [[LianjieCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strCell];
            
        }
        [cell updateCell:muDict];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
        
    }else if(pretopselect == 16){
        NSMutableDictionary *muDict = [dataMuArr objectAtIndex:indexPath.row];
        ZiyuanCell *cell = [tableView dequeueReusableCellWithIdentifier:strCell];
        if (cell == nil) {
            cell = [[ZiyuanCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strCell];
            
        }
        [cell changeUI:muDict];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
        
    }
    /*
     
     
     */
    
    return nil;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if (pretopselect == 16) {
        if (delegate && [delegate respondsToSelector:@selector(clickCell:)]) {
            [delegate clickCell:[dataMuArr objectAtIndex:indexPath.row]];
        }
    }

}
-(void)dealloc{
    
    [dataMuArr release];
    [super dealloc];
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end

//
//  LoginView.m
//  ClassRoomTeacher
//
//  Created by apple  on 13-6-3.
//  Copyright (c) 2013年 apple . All rights reserved.
//

#import "LoginView.h"

@implementation LoginView
@synthesize delegate;
- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 316, 40)];
        lbl.textAlignment = NSTextAlignmentLeft;
        lbl.text = @"用户登录";
        lbl.font = [UIFont boldSystemFontOfSize:25];
        lbl.backgroundColor = [UIColor clearColor];
        lbl.textColor = [UIColor whiteColor];
        [self addSubview:lbl];
        [lbl release];

        
        UIImageView *backImage = [[UIImageView alloc] initWithFrame:CGRectMake(0, 40, 316, 270)];
        backImage.image = [UIImage imageNamed:@"登录底.png"];
        [self addSubview:backImage];
        [backImage release];
        
        flag=YES;//默认是记住用户信息
               
    
        UIImageView *inputImagview = [[UIImageView alloc] initWithFrame:CGRectMake(316/2-296/2, 50, 296, 94)];
        inputImagview.userInteractionEnabled = YES;
        inputImagview.image = [UIImage imageNamed:@"账号输入.png"];
        [self addSubview:inputImagview];
        [inputImagview release];
        
        UILabel *lblUser = [[UILabel alloc]initWithFrame:CGRectMake(20, 5, 80, 40)];
        lblUser.textAlignment = NSTextAlignmentLeft;
        lblUser.text = @"账号:";
        lblUser.alpha = 0.8;
        lblUser.font = [UIFont systemFontOfSize:17];
        lblUser.backgroundColor = [UIColor clearColor];
        lblUser.textColor = [UIColor blackColor];
        [inputImagview addSubview:lblUser];
        [lblUser release];
        
        textUserName = [[UITextField alloc]initWithFrame:CGRectMake(70, 15, 200, 40)];
        textUserName.text = @"";
        [inputImagview addSubview:textUserName];
        [textUserName release];
        
        UILabel *lblPassword = [[UILabel alloc]initWithFrame:CGRectMake(20, 50, 80, 40)];
        lblPassword.textAlignment = NSTextAlignmentLeft;
        lblPassword.text = @"密码:";
        lblPassword.alpha = 0.8;
        lblPassword.font = [UIFont systemFontOfSize:17];
        lblPassword.backgroundColor = [UIColor clearColor];
        lblPassword.textColor = [UIColor blackColor];
        [inputImagview addSubview:lblPassword];
        [lblPassword release];
        
        textPassword = [[UITextField alloc]initWithFrame:CGRectMake(70, 60, 200, 40)];
        textPassword.text = @"";
        [textPassword setSecureTextEntry:YES];
        [inputImagview addSubview:textPassword];
        [textPassword release];
        
        
        UILabel *lblRember = [[UILabel alloc]initWithFrame:CGRectMake(20, 95+50, 110, 40)];
        lblRember.textAlignment = NSTextAlignmentLeft;
        lblRember.text = @"记住登录信息";
        lblRember.alpha = 0.8;
        lblRember.font = [UIFont systemFontOfSize:17];
        lblRember.backgroundColor = [UIColor clearColor];
        lblRember.textColor = [UIColor blackColor];
        [self addSubview:lblRember];
        [lblRember release];
        
        
        btnRember = [[UIButton alloc] initWithFrame:CGRectMake(210, 105+50, 56, 26)];
        [btnRember setImage:[UIImage imageNamed:@"记住用户.png"] forState:UIControlStateNormal];
        [btnRember setImage:[UIImage imageNamed:@"记住用户.png"] forState:UIControlStateHighlighted];
        [btnRember addTarget:self action:@selector(btnRemberAction) forControlEvents:UIControlEventTouchDown];
        [self addSubview:btnRember];
        [btnRember release];
        
      
        
        
        
        UIButton *btnlogin = [[UIButton alloc] initWithFrame:CGRectMake(316/2-276/2, 190, 276, 41)];
        [btnlogin addTarget:self action:@selector(btnloginAction) forControlEvents:UIControlEventTouchUpInside];
        [btnlogin setBackgroundImage:[UIImage imageNamed:@"登录按钮.png"] forState:UIControlStateNormal];
        [btnlogin setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [btnlogin setTitle:@"登录" forState:UIControlStateNormal];
        [self addSubview:btnlogin];
        [btnlogin release];
        
        UIButton *btnExit = [[UIButton alloc] initWithFrame:CGRectMake(316/2-276/2, 190+55, 276, 41)];
        [btnExit addTarget:self action:@selector(btnExitAction) forControlEvents:UIControlEventTouchUpInside];
        [btnExit setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        [btnExit setTitle:@"退出" forState:UIControlStateNormal];
        [btnExit setBackgroundImage:[UIImage imageNamed:@"退出按钮.png"] forState:UIControlStateNormal];
        [self addSubview:btnExit];
        [btnExit release];
        
        
        if ([[NSUserDefaults standardUserDefaults]objectForKey:@"textUserName"]) {
            textUserName.text = [[NSUserDefaults standardUserDefaults]objectForKey:@"textUserName"];
            textPassword.text = [[NSUserDefaults standardUserDefaults]objectForKey:@"textPassword"];
        }
    }
    return self;
}
-(void)btnRemberAction{

    
    if (flag==YES) {
        [btnRember setImage:[UIImage imageNamed:@"不记住用户.png"] forState:UIControlStateNormal];
        [btnRember setImage:[UIImage imageNamed:@"不记住用户.png"] forState:UIControlStateHighlighted];
        
        flag=NO;
    }else{
        [btnRember setImage:[UIImage imageNamed:@"记住用户.png"] forState:UIControlStateNormal];
        [btnRember setImage:[UIImage imageNamed:@"记住用户.png"] forState:UIControlStateHighlighted];
        
        flag=YES;
    }
}
-(void)btnloginAction{
    
    if ([textPassword.text isEqualToString:@""]||[textUserName.text isEqualToString:@""]) {
        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"提示" message:@"用户名和密码不能为空!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }else{
        [textUserName resignFirstResponder];
        [textPassword resignFirstResponder];
        
        

        
        AppDelegate *dele=[[UIApplication sharedApplication]delegate];
        [[Stream sharedStream]closeStreams];
        [dele._queue cancelAllOperations];
        
        if (request) {
            [request cancel];
            request.delegate=nil;
            [request release];
            request=nil;
        }
        
        request=[[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
        //request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",dele.server_Address_str]]];
        [request setDelegate:self];
        
        
        NSString *timeString =[ToolClass getCurretDate];
        
        NSString *strSign=[NSString stringWithFormat:@"args[password]=%@&args[type]=1&args[username]=%@&args[version]=%@&args[versionType]=2&format=JSON&method=Public.login&ts=%@",textPassword.text,textUserName.text,IOS_VERSION,timeString];
        strSign=[strSign stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
        
        [request setPostValue:@"Public.login" forKey:@"method"];
        [request setPostValue:@"JSON" forKey:@"format"];
        [request setPostValue:@"1" forKey:@"args[type]"];
        [request setPostValue:@"2" forKey:@"args[versionType]"];
        [request setPostValue:IOS_VERSION forKey:@"args[version]"];
        [request setPostValue:textUserName.text forKey:@"args[username]"];
        [request setPostValue:textPassword.text forKey:@"args[password]"];
        [request setPostValue:timeString forKey:@"ts"];
        [request setPostValue:[MyMD5 md5:strSign] forKey:@"sign"];
        

        [request buildPostBody];
        [request setTimeOutSeconds:30];
        [request startAsynchronous];
        [request setDidFinishSelector:@selector(mySuccess:)];
        [request setDidFailSelector:@selector(myError:)];
        
    }

    
}
-(void)btnExitAction{
    
    exit(0);
}


-(void)mySuccess:(id)sender{
    
    
    
    NSString *str=[sender responseString];
    
    NSLog(@"stri s%@",str);
    NSDictionary *dict=[str JSONValue];
    NSLog(@"dict is %@",dict);
    
    if (dict==NULL) {
        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"提示" message:@"登陆失败!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
        
        return;
    }
    
    if ([dict objectForKey:@"errCode"]||!dict) {
        
        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"提示" message:@"登录失败！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
        
        
    }else{
//        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"提示" message:@"登录成功！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
//        [alert show];
//        [alert release];
        
        if ([[dict objectForKey:@"version"] intValue]==0) {
        
            
            [[NSUserDefaults standardUserDefaults]setObject:textUserName.text forKey:@"textUserName"];
            [[NSUserDefaults standardUserDefaults]setObject:textPassword.text forKey:@"textPassword"];
            
            AppDelegate *dele=[[UIApplication sharedApplication]delegate];
            [dele loginSocket];
            
            
            [[NSUserDefaults standardUserDefaults]setObject:dict forKey:@"loginInfo"];
            
            
            [delegate performSelector:@selector(homeBtnClicks)];

            
        }else{
            
            [[UIApplication sharedApplication]openURL:[NSURL URLWithString:[dict objectForKey:@"version"]]];

        }
        
        
    }
    
    
    
}
-(void)myError:(id)sender{
    UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"提示" message:@"登录失败！请检查网络连接出现问题，请检查！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];
    
    //NSLog(@"sendermyError is %@",sender);
}
-(void)dealloc{
    
    [request cancel];
    request.delegate=nil;
    [request release];
    
    [super dealloc];
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end

//
//  AppDelegate.m
//  ClassRoomTeacher
//
//  Created by apple  on 13-6-3.
//  Copyright (c) 2013年 apple . All rights reserved.
//

#import "AppDelegate.h"
#import "AouthViewController.h"
#import "ViewController.h"
#import "StuentDoHomeWork.h"
@implementation AppDelegate
@synthesize server_Address_str,push_server_Address;
@synthesize _queue;
@synthesize markLianxi;
@synthesize strReceive;


- (void)dealloc
{
    [navController release];
    self.push_server_Address=nil;
    self.server_Address_str=nil;
    self._queue=nil;

    [_window release];
    [_viewController release];
    [super dealloc];
}

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    
    
    NSOperationQueue *queue=[[NSOperationQueue alloc]init];
    self._queue=queue;
    [queue release];
 
    //添加本地数据库

    NSString *dbName =[NSString stringWithFormat:@"%@.db",@"local"];
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentDirectory = [paths objectAtIndex:0];
    NSString *dbPath = [documentDirectory stringByAppendingPathComponent:dbName];
    FMDatabase *db = [FMDatabase databaseWithPath:dbPath];
    if (![db open]) {
        //NSLog(@"Could not open db.");
    }
    //创建本地资源表
    [db executeUpdate:@"CREATE TABLE IF NOT EXISTS resour_table(r_id integer PRIMARY KEY,re_id text,type text,re_title text,localURL text)"];

    
    //设置画笔颜色，粗细，橡皮大小,如果是第一次进来默认设置
    int flag2 = [[[NSUserDefaults standardUserDefaults] objectForKey:@"first"] intValue];
    if (flag2 == 0) {
        
        
        [[NSUserDefaults standardUserDefaults]setObject:[NSNumber numberWithFloat:2] forKey:@"clear_width"];
        [[NSUserDefaults standardUserDefaults]setObject:[NSNumber numberWithFloat:2] forKey:@"width"];
        
        CGFloat components[3];
        [ToolClass getRGBComponents:components forColor:[UIColor blackColor]];
        [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithFloat:components[0]] forKey:@"color_r"];
         [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithFloat:components[1]] forKey:@"color_g"];
         [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithFloat:components[2]] forKey:@"color_b"];
        
    }
    [[NSUserDefaults standardUserDefaults] setObject:@"1" forKey:@"first"];
    
   
    self.window = [[[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]] autorelease];
    // Override point for customization after application launch.
    self.viewController = [[[ViewController alloc] initWithNibName:@"ViewController" bundle:nil] autorelease];
    navController=[[UINavigationController alloc]initWithRootViewController:self.viewController];
    [navController setNavigationBarHidden:YES];
    self.window.rootViewController = navController;
    
    
    
    [self.window makeKeyAndVisible];
    return YES;
}
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_6_0

- (NSUInteger)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window
{
    return UIInterfaceOrientationMaskLandscape;
}
#endif
- (void)applicationWillResignActive:(UIApplication *)application
{
    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
    // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
}

- (void)applicationDidEnterBackground:(UIApplication *)application
{
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. 
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
}

-(void)loginSocket{
    
    flag = NO;
    [self loginSocketAction];
    
    if (timer) {
        [timer invalidate];
        timer=nil;
    }
    timer=[NSTimer scheduledTimerWithTimeInterval:10 target:self selector:@selector(timerSendData) userInfo:nil repeats:YES];
}
-(void)timerSendData{
    
    
    [self loginSocketAction];
}
-(void)connect{
    
    
    if ([[NSUserDefaults standardUserDefaults] objectForKey:@"textUserName"]) {
        
        
        
        
        NSString *strUser=[[NSUserDefaults standardUserDefaults] objectForKey:@"textUserName"];
        NSString *strPass=[[NSUserDefaults standardUserDefaults] objectForKey:@"textPassword"];
        
        
        NSMutableDictionary *mudict=[ToolClass getSocektHeadDict:strUser pass:strPass auth_type:@"1" auth_version:IOS_VERSION contentLength:@"0" contentype:@"" receiver:@""];
        
        NSString *strHead=[ToolClass getSocketHead:mudict];
        
        if (flag==NO) {
            [[Stream sharedStream]setIsFirst:YES];
            
        }else{
            [[Stream sharedStream]setIsFirst:NO];
            
        }
        [[Stream sharedStream] requestData:strHead whoRequest:nil condition:0];
        
        flag=YES;
        
        [mudict release];
        [strHead release];
    }
    
    
}
-(void)loginSocketAction{
    
    
    [[Stream sharedStream]set_currentObject:self];
    [[Stream sharedStream]start];
    
    NSInvocationOperation *operation = [[NSInvocationOperation alloc]initWithTarget:self selector:@selector(connect) object:nil];
    [self._queue addOperation:operation];
    [operation release];
    
    
    
}
#pragma mark streamDelegate
-(void)getData:(NSData *)receivedData{
    
    
    
    
    NSString *str=[[NSString alloc] initWithData:receivedData encoding:NSUTF8StringEncoding];
    NSLog(@"reveice is %@",str);

    NSDictionary *dict=[str JSONValue];
    if ([[dict objectForKey:@"type"] intValue]==5) {
        
        if (markSuoping ==0) {
            handVc=[[HandleViewController alloc]init];
            [navController pushViewController:handVc animated:YES];
            [handVc release];
        
             markSuoping = 1;
        
         }

    }else if ([[dict objectForKey:@"type"] intValue]==6) {
        
        if (markSuoping == 1) {
            [navController popViewControllerAnimated:YES];
    
            markSuoping = 0;
        }
        
        
        
    }else if([[dict objectForKey:@"type"] intValue]==4) {
        
        if (markLianxi == 0) {
         
            pushVc = [[StuentDoHomeWork alloc]init];
            [pushVc setApId:[[dict objectForKey:@"content"] intValue]];
            [navController pushViewController:pushVc animated:YES];
            [pushVc release];
            
            
            markLianxi = 1;
            
        }
       
        
    }else if([[dict objectForKey:@"type"] intValue]==1) {
        
        //[[NSNotificationCenter defaultCenter]postNotificationName:@"touchScreen" object:[dict objectForKey:@"content"]];
        
    }else if([[dict objectForKey:@"type"] intValue]==2) {
        
        //[[NSNotificationCenter defaultCenter]postNotificationName:@"moveScreen" object:[dict objectForKey:@"content"]];
        
    }else if([[dict objectForKey:@"type"] intValue]==3) {
        
        //[[NSNotificationCenter defaultCenter]postNotificationName:@"endScreen" object:[dict objectForKey:@"content"]];
        
    }else if([[dict objectForKey:@"type"] intValue]==11) {
        
        NSString *strURL = [dict objectForKey:@"content"];

        self.strReceive=[[dict objectForKey:@"teacher"] mutableCopy];
        
        
        aouthVc = [[AouthViewController alloc]init];
        aouthVc.strURL =strURL;
        [navController pushViewController:aouthVc animated:YES];
        [aouthVc release];

        
        
    }else if([[dict objectForKey:@"type"] intValue]==12) {
        
        [navController popViewControllerAnimated:YES];

    }else if([[dict objectForKey:@"type"] intValue]==13) {
        
        
        self.strReceive=[[dict objectForKey:@"teacher"] mutableCopy];

        
        NSArray *array = [navController viewControllers];
        UIViewController *controller = [array objectAtIndex:[array count]-1];
        UIImage *image = [ToolClass imageFromView:controller.view];
        NSData *data = UIImageJPEGRepresentation(image, 1);
        
        NSDictionary *dict=[[NSUserDefaults standardUserDefaults]objectForKey:@"loginInfo"];
        if (requestOther) {
            [requestOther cancel];
            requestOther.delegate=nil;
            [requestOther release];
            requestOther=nil;
        }
        requestOther = [[ASIFormDataRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@/apps/manage/Api",self.server_Address_str]]];
        [requestOther setDelegate:self];
        
        
        NSMutableDictionary *postDict=[[NSMutableDictionary alloc]init ];
        
        NSString *timeString =[ToolClass getCurretDate];
        [postDict setObject:timeString forKey:@"ts"];
        [postDict setObject:[dict objectForKey:@"auth_id"] forKey:@"args[a_id]"];
        
        [postDict setObject:@"JSON" forKey:@"format"];
        [postDict setObject:@"Auth.picture" forKey:@"method"];
        [postDict setObject:[dict objectForKey:@"skey"] forKey:@"skey"];
        
        NSString *strSign=[ToolClass getSign:postDict];
        //NSLog(@"strSign is %@",strSign);
        [postDict setObject:[MyMD5 md5:strSign] forKey:@"sign"];
        for(int i=0;i<[[postDict allKeys] count];i++){
            
            [requestOther setPostValue:[[postDict allValues]objectAtIndex:i] forKey:[[postDict allKeys]objectAtIndex:i]];
        }
        NSLog(@"postdict is %@",postDict);
        
        [requestOther addData:data withFileName:[NSString stringWithFormat:@"%@.png",[dict objectForKey:@"auth_id"]] andContentType:@"image/png" forKey:@"picture"];
        
        [requestOther buildPostBody];
        [requestOther setTimeOutSeconds:30];
        [requestOther startAsynchronous];
        [requestOther setDidFinishSelector:@selector(mySuccessImage:)];
        [requestOther setDidFailSelector:@selector(myError:)];
        
        [postDict release];
        [strSign release];
        
        
    }
    
    
    NSLog(@"dict222 is %@",dict);
}
-(void)mySuccessImage:(id)sender{
    
    NSString *str = [sender responseString];
    NSMutableDictionary *tempDict = [str JSONValue];
    if (tempDict) {
        NSString *strURL = [tempDict objectForKey:@"url"];
        if (strURL) {
            
            
            NSString *strBody=[NSString stringWithFormat:@"{\"type\":\"14\",\"content\":\"%@\"}",strURL];
            
            
            NSInvocationOperation *operation = [[NSInvocationOperation alloc]initWithTarget:self selector:@selector(handelScreen2:) object:strBody];
            [self._queue addOperation:operation];
            [operation release];
            
        }
        
    }
    
    NSLog(@"str is %@",str);
}
-(void)handelScreen2:(NSString *)strBody{
    

    
    NSString *strUser=[[NSUserDefaults standardUserDefaults] objectForKey:@"textUserName"];
    NSString *strPass=[[NSUserDefaults standardUserDefaults] objectForKey:@"textPassword"];
    NSString *contentLength=[NSString stringWithFormat:@"%d",[strBody length]];


    
    
    NSMutableDictionary *mudict=[ToolClass getSocektHeadDict:strUser pass:strPass auth_type:@"1" auth_version:IOS_VERSION contentLength:contentLength contentype:@"" receiver:self.strReceive];
    

    
    NSString *strHead=[ToolClass getSocketHead:mudict];

    
    NSString *reqestString=[NSString stringWithFormat:@"%@%@",strHead,strBody];

    [[Stream sharedStream] requestData:reqestString whoRequest:nil condition:0];

    [mudict release];
    [strHead release];
    
    
}
- (void)applicationDidBecomeActive:(UIApplication *)application
{
    
    NSString *strIP=[[NSUserDefaults standardUserDefaults]objectForKey:@"IP"];
    if (!strIP) {
        strIP=@"";
    }else{
        self.server_Address_str=[NSString stringWithFormat:@"http://%@",strIP];
    }
    
    NSString *strIP2=[[NSUserDefaults standardUserDefaults]objectForKey:@"IP2"];
    if (!strIP2) {
        strIP2=@"";
    }else{
        self.push_server_Address=strIP2;
    }
    
    
//    NSDictionary *dict = [[NSUserDefaults standardUserDefaults] objectForKey:@"loginInfo"];
//    if(dict!=nil){
//    
//        [self loginSocket];
//        
//    }
    
    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
}


- (void)applicationWillTerminate:(UIApplication *)application
{
    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}

@end
